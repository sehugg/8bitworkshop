{
  "version": 3,
  "sources": ["../src/platform/zmachine.ts"],
  "sourcesContent": ["\nimport { Platform, BasePlatform, BaseDebugPlatform, Preset, EmuState, inspectSymbol } from \"../common/baseplatform\";\nimport { EmuHalt, PLATFORMS } from \"../common/emu\";\nimport { TeleType, TeleTypeWithKeyboard } from \"../common/teletype\";\nimport { InputResponse } from \"../common/basic/runtime\";\nimport { loadScript } from \"../common/util\";\n\nconst ZMACHINE_PRESETS = [\n    { id: 'hello.inf', name: 'Hello World' },\n    { id: 'house01.inf', name: 'House Tutorial #1' },\n    { id: 'house02.inf', name: 'House Tutorial #2' },\n    { id: 'house03.inf', name: 'House Tutorial #3' },\n    { id: 'house04.inf', name: 'House Tutorial #4' },\n    { id: 'house05.inf', name: 'House Tutorial #5' },\n    { id: 'house06.inf', name: 'House Tutorial #6' },\n    { id: 'house07.inf', name: 'House Tutorial #7' },\n    { id: 'alice.inf', name: 'Through the Looking-Glass' },\n    { id: 'aloneice.inf', name: 'Alone on the Ice' },\n    { id: 'adventureland.inf', name: 'Adventureland' },\n    { id: 'toyshop.inf', name: 'Toyshop' },\n    { id: 'ruins1.inf', name: 'Ruins #1' },\n    { id: 'ruins2.inf', name: 'Ruins #2' },\n    { id: 'ruins3.inf', name: 'Ruins #3' },\n    { id: 'balances.inf', name: 'Balances' },\n    { id: 'museum.inf', name: 'Museum of Inform' },\n    { id: 'advent.inf', name: 'Colossal Cave Adventure' },\n    { id: 'ztrek.inf', name: 'Super Z Trek' },\n];\n\ndeclare var ZVM;\n\n// https://github.com/erkyrath/quixe/wiki/Quixe-Without-GlkOte#quixes-api\n// https://eblong.com/zarf/glk/glkote/docs.html\n// https://inform-fiction.org/zmachine/standards/z1point0/sect15.html#read_char\n// https://manpages.debian.org/testing/inform6-compiler/inform6.1.en.html\n\ninterface IFZVM {\n    start();\n    run();\n    version: number;\n    pc: number;\n    ram: DataView;\n    stack: DataView;\n    read_data: { buffer?, routine?, time?};\n    handle_line_input(len: number);\n    handle_char_input(charcode: number);\n    handle_create_fileref(fref: number);\n}\n\nfunction debug(...args: any[]) {\n    //console.log(arguments);\n}\n\nclass GlkImpl {\n    vm: IFZVM;\n    input: HTMLInputElement;\n    mainwnd : TeleTypeWithKeyboard;\n    curwnd: TeleType;\n    windows: { [win: number]: TeleType };\n    windowcount: number;\n    exited = false;\n\n    constructor(page: HTMLElement, input: HTMLInputElement, upper: HTMLElement) {\n        this.mainwnd = new TeleTypeWithKeyboard(page, false, input);\n        this.mainwnd.keepinput = false; // input moves w/ cursor\n        this.mainwnd.splitInput = false;\n        this.mainwnd.uppercaseOnly = true;\n        this.mainwnd.hideinput();\n        this.windows = {\n            1: this.mainwnd,\n            2: new TeleType(upper, true),\n            3: new TeleType(null, true), // fake window for resizing\n        };\n        this.input = input;\n        this.mainwnd.resolveInput = (resp:InputResponse) => {\n            var s = resp.line;\n            if (this.vm.read_data.buffer) {\n                for (var i = 0; i < s.length; i++) {\n                    this.vm.read_data.buffer[i] = s.charCodeAt(i) & 0xff;\n                }\n                this.vm.handle_line_input(s.length);\n            } else {\n                this.vm.handle_char_input(s.charCodeAt(0));\n            }\n            this.vm.run();\n        }\n        this.reset();\n    }\n    reset() {\n        this.windowcount = 0;\n        this.exited = false;\n        this.windows[1].clear();\n        this.windows[2].clear();\n        this.curwnd = this.windows[1];\n    }\n    init(options) {\n        this.vm = options.vm;\n        this.vm.start();\n    }\n    fatal_error(s: string) {\n        throw new EmuHalt(s);\n    }\n    update() {\n        // TODO\n    }\n    focusinput() {\n        this.mainwnd.focusinput();\n    }\n    flushline() {\n        this.curwnd.flushline();\n    }\n\n    glk_exit() {\n        this.exited = true;\n        this.flushline();\n        this.windows[1].addtext(\"** Game exited **\", 1);\n    }\n    glk_window_clear(win) {\n        debug('glk_window_clear', arguments);\n        this.windows[win].clear();\n    }\n    glk_request_line_event_uni(win, buf, initlen) {\n        this.mainwnd.waitingfor = 'line';\n        this.focusinput();\n        this.startinputtimer();\n    }\n    glk_request_char_event_uni(win, buf, initlen) {\n        this.mainwnd.waitingfor = 'char';\n        this.focusinput();\n        this.startinputtimer();\n    }\n    startinputtimer() {\n        /* TODO?\n        var rd = this.vm.read_data;\n        if (rd.routine && rd.time) {\n            this.vm['call'](rd.routine);\n            //this.vm.run();\n            setTimeout(this.startinputtimer.bind(this), rd.time*10);\n        }\n        */\n    }\n\n    glk_put_jstring(val: string, allbytes) {\n        //debug('glk_put_jstring', arguments);\n        this.curwnd.print(val);\n    }\n    glk_put_jstring_stream(stream: number, val: string) {\n        //debug('glk_put_jstring_stream', arguments);\n        this.windows[stream].print(val);\n    }\n    glk_put_char_stream_uni(stream: number, ch: number) {\n        //debug('glk_put_char_stream_uni', arguments);\n        this.windows[stream].print(String.fromCharCode(ch));\n    }\n    glk_set_style(val) {\n        this.curwnd.curstyle = val;\n    }\n    /*\n    glk_put_char(ch) {\n        debug('glk_put_char', arguments);\n    }\n    glk_put_string(val) {\n        debug('glk_put_string', arguments);\n    }\n    glk_put_string_stream(str, val) {\n        debug('glk_put_string_stream', arguments);\n    }\n    glk_put_buffer(arr) {\n        debug('glk_put_buffer', arguments);\n    }\n    glk_put_buffer_stream(str, arr) {\n        debug('glk_put_buffer_stream', arguments);\n    }\n    glk_set_style_stream(str, val) {\n        debug('glk_set_style_stream', arguments);\n    }\n    glk_get_char_stream(str) {\n        debug('glk_get_char_stream', arguments);\n    }\n    glk_get_line_stream(str, buf) {\n        debug('glk_get_line_stream', arguments);\n    }\n    glk_get_buffer_stream(str, buf) {\n        debug('glk_get_buffer_stream', arguments);\n    }\n    */\n    glk_char_to_lower(val) {\n        if (val >= 0x41 && val <= 0x5A)\n            return val + 0x20;\n        if (val >= 0xC0 && val <= 0xDE && val != 0xD7)\n            return val + 0x20;\n        return val;\n    }\n    glk_char_to_upper(val) {\n        if (val >= 0x61 && val <= 0x7A)\n            return val - 0x20;\n        if (val >= 0xE0 && val <= 0xFE && val != 0xF7)\n            return val - 0x20;\n        return val;\n    }\n    glk_stylehint_set(wintype, styl, hint, value) {\n        //debug('glk_stylehint_set', arguments);\n    }\n    glk_stylehint_clear(wintype, styl, hint) {\n        //debug('glk_stylehint_clear', arguments);\n    }\n    glk_style_distinguish(win, styl1, styl2) {\n        return 0;\n    }\n    glk_style_measure(win, styl, hint, resultref) {\n        if (resultref)\n            resultref.set_value(0);\n        return 0;\n    }\n    glk_select(eventref) {\n        debug('glk_select', arguments);\n    }\n    glk_window_open(splitwin, method, size, wintype, rock) {\n        debug('glk_window_open', arguments);\n        if (splitwin) {\n            if (method != 0x12 || wintype != 4) return 0;\n            if (size) {\n                $(this.windows[2].page).show();\n                return 2; // split window\n            } else {\n                return 3; // fake window\n            }\n        } else {\n            return 1; // main window\n        }\n    }\n    glk_window_close(win) {\n        debug('glk_window_close', arguments);\n        if (win == 2) {\n            this.windows[win].clear();\n            $(this.windows[win].page).hide();\n        }\n    }\n    glk_window_get_parent(win) {\n        debug('glk_window_get_parent', arguments);\n        if (win == 1) return 0;\n        else return 1;\n    }\n    glk_window_move_cursor(win, col, row) {\n        debug('glk_window_move_cursor', arguments);\n        this.windows[win].move_cursor(col, row);\n    }\n    glk_window_set_arrangement(win, method, size, unknown) {\n        debug('glk_window_set_arrangement', arguments);\n        if (win == 1) this.windows[2].setrows(size);\n    }\n    glk_window_get_stream(win) {\n        debug('glk_window_get_stream', arguments);\n        return win;\n    }\n    glk_set_window(win) {\n        debug('glk_set_window', arguments);\n        this.curwnd = this.windows[win];\n        if (this.curwnd == null) this.fatal_error(\"no window \" + win);\n    }\n    glk_window_get_size(win, widthref: RefBox, heightref: RefBox) {\n        debug('glk_window_get_size', arguments);\n        // TODO: made up sizes, only status line supported\n        if (widthref) widthref.set_value(STATUS_NUM_COLS);\n        if (heightref) heightref.set_value(win == 1 ? 25 : 1);\n    }\n    garglk_set_reversevideo(val) {\n        debug('garglk_set_reversevideo', arguments);\n        this.curwnd.reverse = !!val;\n    }\n    garglk_set_reversevideo_stream(win, val) {\n        debug('garglk_set_reversevideo_stream', arguments);\n        this.windows[win].reverse = !!val;\n    }\n    glk_fileref_create_by_prompt(usage, mode, rock) {\n        debug('glk_fileref_create_by_prompt', arguments);\n        // TODO: support files?\n        this.vm.handle_create_fileref(0);\n        this.vm.run();\n    }\n    glk_gestalt(sel, val) {\n        return this.glk_gestalt_ext(sel, val, null);\n    }\n    glk_gestalt_ext(sel, val, arr) {\n        //debug('glk_gestalt_ext', arguments);\n        switch (sel) {\n\n            case 0: // gestalt_Version\n                /* This implements Glk spec version 0.7.4? */\n                return 0x00000101; // 0.1.1\n\n            case 1: // gestalt_CharInput\n                /* This is not a terrific approximation. Return false for function\n                   keys, control keys, and the high-bit non-printables. For\n                   everything else in the Unicode range, return true. */\n                if (val <= Const.keycode_Left && val >= Const.keycode_End)\n                    return 1;\n                if (val >= 0x100000000 - Const.keycode_MAXVAL)\n                    return 0;\n                if (val > 0x10FFFF)\n                    return 0;\n                if ((val >= 0 && val < 32) || (val >= 127 && val < 160))\n                    return 0;\n                return 1;\n\n            case 2: // gestalt_LineInput\n                /* Same as the above, except no special keys. */\n                if (val > 0x10FFFF)\n                    return 0;\n                if ((val >= 0 && val < 32) || (val >= 127 && val < 160))\n                    return 0;\n                return 1;\n\n            case 3: // gestalt_CharOutput\n                /* Same thing again. We assume that all printable characters,\n                   as well as the placeholders for nonprintables, are one character\n                   wide. */\n                if ((val > 0x10FFFF)\n                    || (val >= 0 && val < 32)\n                    || (val >= 127 && val < 160)) {\n                    if (arr)\n                        arr[0] = 1;\n                    return 0; // gestalt_CharOutput_CannotPrint\n                }\n                if (arr)\n                    arr[0] = 1;\n                return 2; // gestalt_CharOutput_ExactPrint\n\n            case 4: // gestalt_MouseInput\n                if (val == Const.wintype_TextBuffer)\n                    return 0;\n                if (val == Const.wintype_Graphics && has_canvas)\n                    return 0;\n                return 0;\n\n            case 5: // gestalt_Timer\n                return 0;\n\n            case 6: // gestalt_Graphics\n                return 0;\n\n            case 7: // gestalt_DrawImage\n                if (val == Const.wintype_TextBuffer)\n                    return 0;\n                if (val == Const.wintype_Graphics && has_canvas)\n                    return 0;\n                return 0;\n\n            case 8: // gestalt_Sound\n                return 0;\n\n            case 9: // gestalt_SoundVolume\n                return 0;\n\n            case 10: // gestalt_SoundNotify\n                return 0;\n\n            case 11: // gestalt_Hyperlinks\n                return 0;\n\n            case 12: // gestalt_HyperlinkInput\n                if (val == 3 || val == 4) // TextBuffer or TextGrid\n                    return 0;\n                else\n                    return 0;\n\n            case 13: // gestalt_SoundMusic\n                return 0;\n\n            case 14: // gestalt_GraphicsTransparency\n                return 0;\n\n            case 15: // gestalt_Unicode\n                return 1;\n\n            case 16: // gestalt_UnicodeNorm\n                return 1;\n\n            case 17: // gestalt_LineInputEcho\n                return 1;\n\n            case 18: // gestalt_LineTerminators\n                return 1;\n\n            case 19: // gestalt_LineTerminatorKey\n                /* Really this result should be inspected from glkote.js. Since it\n                   isn't, be sure to keep these values in sync with \n                   terminator_key_names. */\n                if (val == Const.keycode_Escape)\n                    return 0;\n                if (val >= Const.keycode_Func12 && val <= Const.keycode_Func1)\n                    return 0;\n                return 0;\n\n            case 20: // gestalt_DateTime\n                return 0;\n\n            case 21: // gestalt_Sound2\n                return 0;\n\n            case 22: // gestalt_ResourceStream\n                return 0;\n\n            case 23: // gestalt_GraphicsCharInput\n                return 0;\n\n            case 0x1100: // reverse video, color\n                return 0;\n        }\n\n        return 0;\n    }\n\n    /* Dummy return value, which means that the Glk call is still in progress,\n       or will never return at all. This is used by glk_exit(), glk_select(),\n       and glk_fileref_create_by_prompt().\n    */\n    DidNotReturn = { dummy: 'Glk call has not yet returned' };\n    RefBox = RefBox;\n    RefStruct = RefStruct;\n}\n\n/* RefBox: Simple class used for \"call-by-reference\" Glk arguments. The object\n   is just a box containing a single value, which can be written and read.\n*/\nclass RefBox {\n    value;\n    set_value(val) {\n        this.value = val;\n    }\n    get_value() {\n        return this.value;\n    }\n}\n\n/* RefStruct: Used for struct-type Glk arguments. After creating the\n   object, you should call push_field() the appropriate number of times,\n   to set the initial field values. Then set_field() can be used to\n   change them, and get_fields() retrieves the list of all fields.\n\n   (The usage here is loose, since Javascript is forgiving about arrays.\n   Really the caller could call set_field() instead of push_field() --\n   or skip that step entirely, as long as the Glk function later calls\n   set_field() for each field. Which it should.)\n*/\nclass RefStruct {\n    constructor(numels) {\n    }\n    fields = [];\n    push_field(val) {\n        this.fields.push(val);\n    }\n    set_field(pos, val) {\n        this.fields[pos] = val;\n    }\n    get_field(pos) {\n        return this.fields[pos];\n    }\n    get_fields() {\n        return this.fields;\n    }\n}\n\n\nconst has_canvas = typeof window === 'object';\n\nconst Const = {\n    gestalt_Version: 0,\n    gestalt_CharInput: 1,\n    gestalt_LineInput: 2,\n    gestalt_CharOutput: 3,\n    gestalt_CharOutput_CannotPrint: 0,\n    gestalt_CharOutput_ApproxPrint: 1,\n    gestalt_CharOutput_ExactPrint: 2,\n    gestalt_MouseInput: 4,\n    gestalt_Timer: 5,\n    gestalt_Graphics: 6,\n    gestalt_DrawImage: 7,\n    gestalt_Sound: 8,\n    gestalt_SoundVolume: 9,\n    gestalt_SoundNotify: 10,\n    gestalt_Hyperlinks: 11,\n    gestalt_HyperlinkInput: 12,\n    gestalt_SoundMusic: 13,\n    gestalt_GraphicsTransparency: 14,\n    gestalt_Unicode: 15,\n    gestalt_UnicodeNorm: 16,\n    gestalt_LineInputEcho: 17,\n    gestalt_LineTerminators: 18,\n    gestalt_LineTerminatorKey: 19,\n    gestalt_DateTime: 20,\n    gestalt_Sound2: 21,\n    gestalt_ResourceStream: 22,\n    gestalt_GraphicsCharInput: 23,\n\n    keycode_Unknown: 0xffffffff,\n    keycode_Left: 0xfffffffe,\n    keycode_Right: 0xfffffffd,\n    keycode_Up: 0xfffffffc,\n    keycode_Down: 0xfffffffb,\n    keycode_Return: 0xfffffffa,\n    keycode_Delete: 0xfffffff9,\n    keycode_Escape: 0xfffffff8,\n    keycode_Tab: 0xfffffff7,\n    keycode_PageUp: 0xfffffff6,\n    keycode_PageDown: 0xfffffff5,\n    keycode_Home: 0xfffffff4,\n    keycode_End: 0xfffffff3,\n    keycode_Func1: 0xffffffef,\n    keycode_Func2: 0xffffffee,\n    keycode_Func3: 0xffffffed,\n    keycode_Func4: 0xffffffec,\n    keycode_Func5: 0xffffffeb,\n    keycode_Func6: 0xffffffea,\n    keycode_Func7: 0xffffffe9,\n    keycode_Func8: 0xffffffe8,\n    keycode_Func9: 0xffffffe7,\n    keycode_Func10: 0xffffffe6,\n    keycode_Func11: 0xffffffe5,\n    keycode_Func12: 0xffffffe4,\n    /* The last keycode is always (0x100000000 - keycode_MAXVAL) */\n    keycode_MAXVAL: 28,\n\n    evtype_None: 0,\n    evtype_Timer: 1,\n    evtype_CharInput: 2,\n    evtype_LineInput: 3,\n    evtype_MouseInput: 4,\n    evtype_Arrange: 5,\n    evtype_Redraw: 6,\n    evtype_SoundNotify: 7,\n    evtype_Hyperlink: 8,\n    evtype_VolumeNotify: 9,\n\n    style_Normal: 0,\n    style_Emphasized: 1,\n    style_Preformatted: 2,\n    style_Header: 3,\n    style_Subheader: 4,\n    style_Alert: 5,\n    style_Note: 6,\n    style_BlockQuote: 7,\n    style_Input: 8,\n    style_User1: 9,\n    style_User2: 10,\n    style_NUMSTYLES: 11,\n\n    wintype_AllTypes: 0,\n    wintype_Pair: 1,\n    wintype_Blank: 2,\n    wintype_TextBuffer: 3,\n    wintype_TextGrid: 4,\n    wintype_Graphics: 5,\n\n    winmethod_Left: 0x00,\n    winmethod_Right: 0x01,\n    winmethod_Above: 0x02,\n    winmethod_Below: 0x03,\n    winmethod_DirMask: 0x0f,\n\n    winmethod_Fixed: 0x10,\n    winmethod_Proportional: 0x20,\n    winmethod_DivisionMask: 0xf0,\n\n    winmethod_Border: 0x000,\n    winmethod_NoBorder: 0x100,\n    winmethod_BorderMask: 0x100,\n\n    fileusage_Data: 0x00,\n    fileusage_SavedGame: 0x01,\n    fileusage_Transcript: 0x02,\n    fileusage_InputRecord: 0x03,\n    fileusage_TypeMask: 0x0f,\n\n    fileusage_TextMode: 0x100,\n    fileusage_BinaryMode: 0x000,\n\n    filemode_Write: 0x01,\n    filemode_Read: 0x02,\n    filemode_ReadWrite: 0x03,\n    filemode_WriteAppend: 0x05,\n\n    seekmode_Start: 0,\n    seekmode_Current: 1,\n    seekmode_End: 2,\n\n    stylehint_Indentation: 0,\n    stylehint_ParaIndentation: 1,\n    stylehint_Justification: 2,\n    stylehint_Size: 3,\n    stylehint_Weight: 4,\n    stylehint_Oblique: 5,\n    stylehint_Proportional: 6,\n    stylehint_TextColor: 7,\n    stylehint_BackColor: 8,\n    stylehint_ReverseColor: 9,\n    stylehint_NUMHINTS: 10,\n\n    stylehint_just_LeftFlush: 0,\n    stylehint_just_LeftRight: 1,\n    stylehint_just_Centered: 2,\n    stylehint_just_RightFlush: 3,\n\n    imagealign_InlineUp: 1,\n    imagealign_InlineDown: 2,\n    imagealign_InlineCenter: 3,\n    imagealign_MarginLeft: 4,\n    imagealign_MarginRight: 5\n\n};\n\n//\n\nconst STATUS_NUM_COLS = 80;\n\nclass ZmachinePlatform implements Platform {\n    mainElement: HTMLElement;\n    zfile: Uint8Array;\n    zvm;\n    glk;\n    focused = false;\n\n    constructor(mainElement: HTMLElement) {\n        this.mainElement = mainElement;\n        $(mainElement).css('overflowY', 'auto');\n    }\n\n    async start() {\n        await loadScript('./lib/zvm/ifvms.min.js');\n        // create divs\n        var parent = this.mainElement;\n        var gameport = $('<div id=\"gameport\"/>').appendTo(parent);\n        var upperwnd = $('<div id=\"upperport\" class=\"transcript transcript-split transcript-style-2\"/>').insertBefore(parent).hide();\n        var windowport = $('<div id=\"windowport\" class=\"transcript\"/>').appendTo(gameport);\n        var inputline = $('<input class=\"transcript-input\" type=\"text\"/>').appendTo(gameport).hide();\n        this.glk = new GlkImpl(windowport[0], inputline[0] as HTMLInputElement, upperwnd[0]);\n        this.resize = () => {\n            // set font size proportional to window width\n            var charwidth = $(gameport).width() * 1.6 / STATUS_NUM_COLS;\n            $(upperwnd).css('font-size', charwidth + 'px');\n        }\n        this.resize();\n    }\n\n    resize: () => void;\n\n    loadROM(title, data) {\n        this.zfile = data;\n        this.reset();\n    }\n\n    getROMExtension() {\n        return \".z\" + (this.zvm.version || 5);\n    }\n\n    reset(): void {\n        if (this.zfile == null) return;\n        this.zvm = new ZVM();\n        this.zvm.prepare(this.zfile.slice(0), {\n            Glk: this.glk,\n        });\n        this.glk.reset();\n        this.glk.init({\n            vm: this.zvm,\n        });\n        console.log(this.zvm);\n    }\n\n    pause(): void {\n    }\n    resume(): void {\n    }\n\n    readAddress(a: number) {\n        return this.zvm && a < this.zvm.ram.byteLength ? this.zvm.ram.getUint8(a) : this.zfile[a];\n    }\n\n    getPC() {\n        return this.zvm.pc;\n    }\n\n    /*\n    loadState(state): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    saveState() {\n        return {\n            //glk: this.Glk.save_allstate(),\n            io: $.extend(true, {}, this.zvm.io),\n            ram: this.zvm.save_file(this.zvm.pc, 1),\n            read_data: $.extend(true, {}, this.zvm.read_data),\n            xorshift_seed: this.zvm.xorshift_seed,\n        }\n    }\n    */\n\n    isRunning(): boolean {\n        return this.zvm != null && !this.glk.exited;\n    }\n\n    advance(novideo?: boolean): number {\n        // TODO? we should advance 1 step, whatever that is in ZVM\n        return 0;\n    }\n\n    getToolForFilename(s: string): string {\n        return \"inform6\";\n    }\n    getDefaultExtension(): string {\n        return \".inf\";\n    }\n    showHelp() {\n        return \"https://www.inform-fiction.org/manual/html/contents.html\";\n    }\n    getPresets(): Preset[] {\n        return ZMACHINE_PRESETS;\n    }\n\n    // TODO: Z machine is big endian!!\n    inspect(ident: string) {\n        return inspectSymbol(this, ident);\n    }\n\n    getDebugTree() {\n        var root = {};\n        //root['debuginfo'] = sym.debuginfo;\n        if (this.zvm != null) {\n            root['Objects'] = {$$: () => this.getRootObjects()};\n            root['Globals'] = {$$: () => this.getGlobalVariables()};\n            //root['VM'] = {$$: () => this.zvm};\n        }\n        return root;\n    }\n    getObjectName(node) {\n        var objlookup = this.getDebugLookup('object');\n        var name = objlookup[node] || \"\";\n        name += \" (#\" + node + \")\";\n        return name;\n    }\n    addObjectToTree(tree, child) {\n        let name = this.getObjectName(child);\n        tree[name] = this.getObjectTree(child);\n    }\n    getRootObjects() {\n        var tree = {};\n        // TODO: better way?\n        try {\n            for (let child = 0; child < 65536; child++) {\n                if (this.zvm.get_parent(child) == 0) {\n                    this.addObjectToTree(tree, child);\n                }\n            }\n        } catch (e) {\n            if (!(e instanceof RangeError)) throw e;\n        }\n        return tree;\n    }\n    getObjectTree(parentobj: number) {\n        var child = this.zvm.get_child(parentobj);\n        var tree = {};\n        while (child) {\n            this.addObjectToTree(tree, child);\n            child = this.zvm.get_sibling(child);\n        }\n        // add attributes\n        var flags = this.getFlagList(parentobj);\n        if (flags.length) {\n            tree[\"[attributes]\"] = flags.join(' ');\n        }\n        /*\n        var props = this.getPropList(parentobj);\n        if (props.length) {\n            tree[\"[properties]\"] = props.join(' ');\n        }\n        */\n        return tree;\n    }\n    getFlagList(obj: number) {\n        var attrlookup = this.getDebugLookup('attribute');\n        var set_attrs = [];\n        for (var i = 0; i < 32; i++) {\n            if (this.zvm.test_attr(obj, i)) {\n                set_attrs.push(attrlookup[i] || \"#\" + i);\n            }\n        }\n        return set_attrs;\n    }\n    getPropList(obj: number) {\n        var proplookup = this.getDebugLookup('property');\n        var set_props = [];\n        var addr = 0;\n        for (var i = 0; i < 50; i++) {\n            addr = this.zvm.find_prop(obj, 0, addr);\n            if (addr == 0) break;\n            set_props.push(proplookup[addr] || \"%\" + addr);\n        }\n        return set_props;\n    }\n    getDebugLookup(key: 'object' | 'property' | 'attribute' | 'constant' | 'global-variable'): {} {\n        var debugsym = (this as Platform).debugSymbols;\n        return (debugsym && debugsym.debuginfo && debugsym.debuginfo[key]) || {};\n    }\n    getGlobalVariables() {\n        var globals = this.getDebugLookup('global-variable');\n        var result = {};\n        Object.entries(globals).forEach((entry) => {\n            var addr = parseInt(entry[0]);\n            var name = entry[1] as string;\n            result[name] = this.zvm.m.getUint16(addr);\n        })\n        return result;\n    }\n}\n\n//\n\nPLATFORMS['zmachine'] = ZmachinePlatform;\n"],
  "mappings": "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",
  "names": ["ZMACHINE_PRESETS", "debug", "args", "GlkImpl", "page", "input", "upper", "RefBox", "RefStruct", "TeleTypeWithKeyboard", "TeleType", "resp", "i", "options", "s", "EmuHalt", "win", "buf", "initlen", "val", "allbytes", "stream", "ch", "wintype", "styl", "hint", "value", "styl1", "styl2", "resultref", "eventref", "splitwin", "method", "size", "rock", "col", "row", "unknown", "widthref", "heightref", "STATUS_NUM_COLS", "usage", "mode", "sel", "arr", "Const", "has_canvas", "numels", "pos", "ZmachinePlatform", "mainElement", "loadScript", "parent", "gameport", "upperwnd", "windowport", "inputline", "charwidth", "title", "data", "a", "novideo", "ident", "inspectSymbol", "root", "node", "objlookup", "name", "tree", "child", "e", "parentobj", "flags", "obj", "attrlookup", "set_attrs", "proplookup", "set_props", "addr", "key", "debugsym", "globals", "result", "entry", "PLATFORMS"]
}
