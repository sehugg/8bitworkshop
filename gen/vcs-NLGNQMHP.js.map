{
  "version": 3,
  "sources": ["../src/platform/vcs.ts"],
  "sourcesContent": ["\nimport { Platform, BasePlatform, cpuStateToLongString_6502, dumpStackToString, DisasmLine, CpuState, Preset } from \"../common/baseplatform\";\nimport { PLATFORMS, dumpRAM, EmuHalt, __createCanvas, drawCrosshair } from \"../common/emu\";\nimport { hex, loadScript, lpad, tobin } from \"../common/util\";\nimport { CodeAnalyzer_vcs } from \"../common/analysis\";\nimport { disassemble6502 } from \"../common/cpu/disasm6502\";\nimport { ProbeRecorder } from \"../common/probe\";\nimport { NullProbe, ProbeAll } from \"../common/devices\";\nimport { BaseMAME6502Platform } from \"../common/mameplatform\";\n\ndeclare var Javatari : any;\ndeclare var jt : any; // 6502\n\nconst VCS_PRESETS : Preset[] = [\n  {id:'examples/hello.a', chapter:4, name:'Hello 6502 and TIA'},\n  {id:'examples/vsync.a', chapter:5, name:'Painting on the CRT', title:'Color Bars'},\n  {id:'examples/playfield.a', chapter:6, name:'Playfield Graphics'},\n  {id:'examples/sprite.a', chapter:7, name:'Players and Sprites'},\n  {id:'examples/colorsprites.a', chapter:8, name:'Color Sprites'},\n  {id:'examples/timing2.a', chapter:9, name:'Fine Positioning', title:'Fine Position'},\n  {id:'examples/missiles.a', chapter:10, name:'Player/Missile Graphics', title:'Player/Missile'},\n  {id:'examples/sethorizpos.a', chapter:11, name:'SetHorizPos Routine'},\n  {id:'examples/piatimer.a', chapter:12, name:'PIA Timer'},\n  {id:'examples/controls.a', chapter:13, name:'Joysticks'},\n  {id:'examples/complexscene.a', chapter:15, name:'Complex Scene I'},\n  {id:'examples/complexscene2.a', chapter:16, name:'Complex Scene II'},\n  {id:'examples/scoreboard.a', chapter:18, name:'Scoreboard'},\n  {id:'examples/collisions.a', chapter:19, name:'Collisions'},\n  {id:'examples/bitmap.a', chapter:20, name:'Async Playfield: Bitmap', title:'Async PF Bitmap'},\n  {id:'examples/brickgame.a', chapter:21, name:'Async Playfield: Bricks', title:'Async PF Bricks'},\n//  {id:'examples/multisprite1.a', chapter:8, name:'Sprite Kernel'},\n  {id:'examples/bigsprite.a', chapter:22, name:'A Big 48-Pixel Sprite', title:'48-Pixel Sprite'},\n  {id:'examples/tinyfonts2.a', chapter:23, name:'Tiny Text'},\n  {id:'examples/score6.a', chapter:24, name:'6-Digit Score'},\n  {id:'examples/retrigger.a', chapter:26, name:'Sprite Formations'},\n//  {id:'examples/tinyfonts.a', chapter:23, name:'Tiny Fonts, Slow'},\n  {id:'examples/multisprite3.a', chapter:28, name:'Multisprites'},\n  {id:'examples/procgen1.a', chapter:30, name:'Procedural Generation'},\n  {id:'examples/lines.a', chapter:31, name:'Drawing Lines'},\n//  {id:'examples/piatable.a', name:'Timer Table'},\n  {id:'examples/musicplayer.a', chapter:32, name:'Music Player'},\n  {id:'examples/road.a', chapter:33, name:'Pseudo 3D Road'},\n  {id:'examples/bankswitching.a', chapter:35, name:'Bankswitching'},\n  {id:'examples/wavetable.a', chapter:36, name:'Wavetable Sound'},\n  {id:'examples/pal.a', name:'PAL Video Output'},\n//  {id:'examples/testlibrary.a', name:'VCS Library Demo'},\n//  {id:'examples/music2.a', name:'Pitch-Accurate Music'},\n//  {id:'examples/fullgame.a', name:'Thru Hike: The Game', title:'Thru Hike'},\n  {id:'examples/fracpitch.a', name:'Fractional Pitch', category:'BASIC and Other Languages'},\n  {id:'bb/helloworld.bas', name:'Hello World (batariBASIC)'},\n  {id:'bb/draw.bas', name:'Playfield Draw (batariBASIC)'},\n  {id:'bb/sample.bas', name:'Sprite Test (batariBASIC)'},\n  {id:'bb/FIFA1977.bas', name:'2P Soccer Game (batariBASIC)'},\n  {id:'bb/duck_chase.bas', name:'Duck Chase (batariBASIC)'},\n  {id:'wiz/finalduck.wiz', name:'Final Duck (Wiz)'},\n//  {id:'bb/rblast106.bas', name:'Road Blasters (batariBASIC)'},\n  {id:'vcslib/demo_vcslib.c', name:'VCSLib Demo (C)'},\n  {id:'helloworld.cc2600', name:'Hello World (cc2600)'},\n];\n\nfunction getToolForFilename_vcs(fn: string) {\n  if (fn.endsWith(\".cc2600\")) return \"cc2600\";\n  if (fn.endsWith(\"-llvm.c\")) return \"remote:llvm-mos\";\n  if (fn.endsWith(\".wiz\")) return \"wiz\";\n  if (fn.endsWith(\".bb\") || fn.endsWith(\".bas\")) return \"bataribasic\";\n  if (fn.endsWith(\".ca65\")) return \"ca65\";\n  if (fn.endsWith(\".acme\")) return \"acme\";\n  //if (fn.endsWith(\".inc\")) return \"ca65\";\n  if (fn.endsWith(\".c\")) return \"cc65\";\n  //if (fn.endsWith(\".h\")) return \"cc65\";\n  if (fn.endsWith(\".ecs\")) return \"ecs\";\n  return \"dasm\";\n}\n\nclass VCSPlatform extends BasePlatform {\n\n  lastBreakState; // last breakpoint state\n  canvas : HTMLCanvasElement;\n\n  // TODO: super hack for ProbeBitmap view\n  machine = {\n    cpuCyclesPerLine: 76 // NTSC\n  };\n\n  getPresets() { return VCS_PRESETS; }\n\n  async start() {\n    var self : VCSPlatform = this;\n    // load Javatari and configure settings\n    await loadScript(\"javatari/javatari.js\");\n    Javatari.AUTO_START = false;\n    Javatari.SHOW_ERRORS = false;\n    Javatari.CARTRIDGE_CHANGE_DISABLED = true;\n    Javatari.DEBUG_SCANLINE_OVERFLOW = false; // TODO: integrate into probe API\n    Javatari.AUDIO_BUFFER_SIZE = 256;\n    // show console div and start\n    $(\"#javatari-div\").show();\n    Javatari.start();\n    var jaconsole = Javatari.room.console;\n    // intercept clockPulse function\n    jaconsole.oldClockPulse = jaconsole.clockPulse;\n    jaconsole.clockPulse = function() {\n      self.updateRecorder();\n      self.probe.logNewFrame();\n      this.oldClockPulse();\n      // look for KIL instruction\n      if (Javatari.room.console.getCPUState().o == 0x02 && Javatari.room.console.onBreakpointHit != null) {\n        Javatari.room.console.onBreakpointHit(Javatari.room.console.saveState());\n        //throw new EmuHalt(\"CPU STOPPED\"); // TODO: requires browser reload\n      }\n    }\n    // intercept TIA end of line\n    var videoSignal = jaconsole.tia.getVideoOutput();\n    videoSignal.oldNextLine = videoSignal.nextLine;\n    videoSignal.nextLine = function(pixels, vsync) {\n      self.probe.logNewScanline();\n      return this.oldNextLine(pixels, vsync);\n    }\n    // resize after added to dom tree\n    var jacanvas = $(\"#javatari-screen\").find(\"canvas\")[0];\n    const resizeObserver = new ResizeObserver(entries => {\n      this.resize();\n    });\n    resizeObserver.observe(jacanvas);\n    this.canvas = jacanvas;\n  }\n\n  loadROM(title, data) {\n    if (data.length == 0 || ((data.length & 0x3ff) != 0))\n      throw new EmuHalt(\"Invalid ROM length: \" + data.length);\n    // TODO: parse Log messages from Javatari?\n    var wasrunning = this.isRunning();\n    Javatari.loadROM(title, data);\n    if (!this.isRunning()) throw Error(\"Could not load ROM\");\n    if (!wasrunning) this.pause();\n  }\n\n  getOpcodeMetadata(opcode, offset) {\n    return Javatari.getOpcodeMetadata(opcode, offset);\n  }\n\n  getRasterPosition() : {x:number,y:number,clk:number} {\n    var clkfs = Javatari.room.console.getClocksFromFrameStart() - 1;\n    var row = Math.floor(clkfs/76);\n    var col = clkfs - row*76;\n    var xpos = col*3;\n    var ypos = row;\n    return {x:xpos, y:ypos, clk:clkfs%76};\n  }\n  getRasterScanline() : number {\n    return this.getRasterPosition().y;\n  }\n  getRasterLineClock() : number {\n    return this.getRasterPosition().x;\n  }\n  getRasterCanvasPosition() : {x:number,y:number} {\n    let p = Javatari.room.console.tia.getVideoOutput().monitor.getDisplayParameters();\n    let {x,y} = this.getRasterPosition();\n    let canvasPos = {\n      x: (x - p.displayOriginX) * p.displayWidth * p.displayScaleX / (p.signalWidth - p.displayOriginX),\n      y: (y - p.displayOriginY) * p.displayHeight * p.displayScaleY / p.displayHeight\n    };\n    console.log(x,y,canvasPos,p);\n    return canvasPos;\n  }\n\n  // TODO: Clock changes this on event, so it may not be current\n  isRunning() {\n    //console.log(Javatari.room.console.isRunning(), Javatari.room.console.isPowerOn);\n    return Javatari.room && Javatari.room.console.isRunning();\n  }\n  pause() {\n    Javatari.room.console.pause();\n    Javatari.room.speaker.mute();\n  }\n  resume() {\n    Javatari.room.console.go();\n    // for browser autostart\n    Javatari.room.speaker.powerOff();\n    Javatari.room.speaker.powerOn();\n  }\n  advance() : number {\n    Javatari.room.console.clockPulse();\n    return 0; // TODO: advanceFrameClock() and return 76*262 (or PAL)\n  }\n  /*\n  advanceFrameClock?(trap: DebugCondition, step: number) : number {\n    this.runEval( (c) => {\n      var clkfs = Javatari.room.console.getClocksFromFrameStart() - 1;\n      return clkfs >= step;\n    });\n    return step;\n  }\n  */\n  // for unit test\n  nextFrame() {\n    Javatari.room.console.clockPulse();\n  }\n\n  step() { Javatari.room.console.debugSingleStepCPUClock(); }\n  stepBack() { Javatari.room.console.debugStepBackInstruction(); }\n  runEval(evalfunc) { Javatari.room.console.debugEval(evalfunc); }\n\n  setupDebug(callback) {\n    Javatari.room.console.onBreakpointHit = (state) => {\n      state.c.PC = (state.c.PC - 1) & 0xffff;\n      this.fixState(state);\n      Javatari.room.console.pause();\n      Javatari.room.speaker.mute();\n      this.lastBreakState = state;\n      callback(state);\n      // TODO: we have to delay because javatari timer is still running\n      setTimeout(() => this.updateVideoDebugger(), 100);\n    }\n    Javatari.room.speaker.mute();\n  }\n  isDebugging() : boolean {\n    // TODO: always true\n    return Javatari.room.console.onBreakpointHit != null;\n  }\n  clearDebug() {\n    this.lastBreakState = null;\n    Javatari.room.console.disableDebug();\n    Javatari.room.console.onBreakpointHit = null;\n    if (this.isRunning()) Javatari.room.speaker.play();\n  }\n\n  reset() {\n    Javatari.room.console.powerOff();\n    Javatari.room.console.resetDebug();\n    Javatari.room.console.powerOn();\n    Javatari.room.speaker.play();\n  }\n  getOriginPC() {\n    return (this.readAddress(0xfffc) | (this.readAddress(0xfffd) << 8)) & 0xffff;\n  }\n  newCodeAnalyzer() {\n    return new CodeAnalyzer_vcs(this);\n  }\n  saveState() {\n    var state = Javatari.room.console.saveState();\n    this.fixState(state);\n    return state;\n  }\n  fixState(state) {\n    // TODO: DASM listing prevents us from using RORG offset\n    // TODO: how to handle 1000/3000/etc vs overlapping addresses?\n    if (state.ca?.f != '3E' && state.ca?.f != '3F')  {\n      var ofs = (state.ca?.bo) || 0;\n      // TODO: for batari BASIC\n      state.c.EPC = state.c.PC + ofs; // EPC = effective PC for ROM\n    }\n  }\n  loadState(state) {\n    return Javatari.room.console.loadState(state);\n  }\n  getCPUState() : CpuState {\n    return Javatari.room.console.getCPUState();\n  }\n  saveControlsState() {\n    return Javatari.room.console.saveControlsState();\n  }\n  loadControlsState(state) {\n    Javatari.room.console.loadControlsState(state);\n  }\n  readAddress(addr) {\n    // TODO: shouldn't have to do this when debugging\n    // TODO: don't read bank switch addresses\n    if (this.lastBreakState && addr >= 0x80 && addr < 0x100)\n      return this.getRAMForState(this.lastBreakState)[addr & 0x7f];\n    else if ((addr & 0x1280) === 0x280)\n      return 0; // don't read PIA\n    else\n      return Javatari.room.console.readAddress(addr);\n  }\n  writeAddress(addr,value) {\n    Javatari.room.console.writeAddress(addr,value);\n  }\n  runUntilReturn() {\n    var depth = 1;\n    this.runEval( (c) => {\n      if (depth <= 0 && c.T == 0)\n        return true;\n      if (c.o == 0x20)\n        depth++;\n      else if (c.o == 0x60 || c.o == 0x40)\n        --depth;\n      return false;\n    });\n  }\n  runToVsync() {\n    this.advance();\n    this.runEval( (c) => { return true; } );\n  }\n  cpuStateToLongString(c) {\n    return cpuStateToLongString_6502(c);\n  }\n  getRAMForState(state) {\n    return jt.Util.byteStringToUInt8Array(atob(state.r.b));\n  }\n  ramStateToLongString(state) {\n    var ram = this.getRAMForState(state);\n    return \"\\n\" + dumpRAM(ram, 0x80, 0x80);\n  }\n  getToolForFilename = getToolForFilename_vcs;\n  getDefaultExtension() { return \".dasm\"; }\n  getROMExtension() { return \".a26\"; }\n\n  getDebugCategories() {\n    return ['CPU','Stack','PIA','TIA'];\n  }\n  getDebugInfo(category, state) {\n    switch (category) {\n      case 'CPU':    return this.cpuStateToLongString(state.c) + this.bankSwitchStateToString(state);\n      case 'Stack':\t return dumpStackToString(this, this.getRAMForState(state), 0x100, 0x1ff, 0x100+state.c.SP, 0x20);\n      case 'PIA':    return this.ramStateToLongString(state) + \"\\n\" + this.piaStateToLongString(state.p);\n      case 'TIA':    return this.tiaStateToLongString(state.t);\n    }\n  }\n  bankSwitchStateToString(state) {\n    if (state.ca?.ro >= 0) return \"RAMOffset \"+hex(state.ca.ro,4)+\"\\n\";\n    return (state.ca?.bo >= 0) ? \"BankOffset \"+hex(state.ca.bo,4)+\"\\n\" : \"\";\n  }\n  piaStateToLongString(p) {\n    return \"Timer  \" + p.t + \"/\" + p.c + \"\\nINTIM  $\" + hex(p.IT,2) + \" (\" + p.IT + \")\\nINSTAT $\" + hex(p.IS,2) + \"\\n\";\n  }\n  tiaStateToLongString(t) {\n    var pos = this.getRasterPosition();\n    var s = '';\n    s += \"H\" + lpad(pos.x.toString(),5) + \" (clk \" + lpad(pos.clk.toString(),3) + \") V\" + lpad(pos.y.toString(),5) + \"   \";\n    s += (t.vs?\"VSYNC \":\"- \") + (t.vb?\"VBLANK \":\"- \") + \"\\n\";\n    s += \"\\n\";\n    s += \"Playfield \" + t.f + \"\\n\";\n    s += \"          \" + (t.fr?\"REFLECT \":\"- \") + (t.fs?\"SCOREMODE \":\"- \") + (t.ft?\"PRIORITY \":\"- \") + \"\\n\";\n    for (var j=0; j<2; j++) {\n      var i = \"p\"+j;\n      s += \"Player\"+j+ lpad(tobin(t[i]),11) + lpad(tobin(t[i+'d']),11) + \"\\n\";\n    }\n    s += \"\\n\";\n    // TODO? s += \"    Color {color:0x\" + hex(t.fc)  + \"} {color:0x\" + hex(t.fb) + \"}\\n\";\n    s += \"          Count Scan Speed\\n\";\n    for (var j=0; j<2; j++) {\n      var i = \"p\"+j;\n      s += \"Player\"+j+ lpad(t[i+'co'],8) + lpad(nonegstr(t[i+'sc']),5) + lpad(t[i+'ss'],6);\n      s += \" \" + (t[i+'rr']?\"RESET\":\"\") + \" \" + (t[i+'v']?\"DELAY\":\"\") + \" \" + (t[i+'cc']?\"CLOSECOPY\":\"\") + \" \" + (t[i+'mc']?\"MEDCOPY\":\"\") + \" \" + (t[i+'wc']?\"WIDECOPY\":\"\") + \" \" + (t[i+'r']?\"REFLECT\":\"\") + \"\\n\";\n    }\n    for (var j=0; j<2; j++) {\n      var i = \"m\"+j;\n      s += \"Missile\"+j+ lpad(t[i+'co'],7) + lpad(nonegstr(t[i+'sc']),5) + lpad(t[i+'ss'],6);\n      s += \" \" + (t[i+'rr']?\"RESET\":\"\") + \" \" + (t[i+'r']?\"RESET2PLAYER\":\"\") + \"\\n\";\n    }\n    s += \"Ball\"+ lpad(t['bco'],11) + lpad(nonegstr(t['bsc']),5) + lpad(t['bss'],6) + \"\\n\";\n    return s;\n  }\n\n  disassemble(pc:number, read:(addr:number)=>number) : DisasmLine {\n    return disassemble6502(pc, read(pc), read(pc+1), read(pc+2));\n  }\n\n  showHelp() {\n    return \"https://8bitworkshop.com/docs/platforms/vcs/\";\n  }\n\n  getMemoryMap = function() { return {main:[\n      {name:'TIA Registers',start:0x00,size:0x80,type:'io'},\n      {name:'PIA RAM',start:0x80,size:0x80,type:'ram'},\n      {name:'PIA Ports and Timer',start:0x280,size:0x18,type:'io'},\n      {name:'Cartridge ROM',start:0xf000,size:0x1000-6,type:'rom'},\n      {name:'CPU Vectors',start:0xfffa,size:0x6,type:'rom'},\n  ]}};\n\n  // probing\n  nullProbe = new NullProbe();\n  probe : ProbeAll = this.nullProbe;\n\n  startProbing?() : ProbeRecorder {\n    var self : VCSPlatform = this;\n    var rec = new ProbeRecorder(this);\n    this.connectProbe(rec);\n    var probe = this.probe;\n    // intercept CPU clock pulse\n    var cpu = Javatari.room.console.cpu;\n    if (cpu.oldCPUClockPulse == null) {\n      cpu.oldCPUClockPulse = cpu.clockPulse;\n      cpu.clockPulse = function() {\n        if (cpu.isPCStable())\n          probe.logExecute(cpu.getPC(), cpu.getSP());\n        this.oldCPUClockPulse();\n        probe.logClocks(1);\n      }\n    }\n    // intercept bus read/write\n    var bus = Javatari.room.console.bus;\n    if (bus.oldRead == null) {\n      bus.oldRead = bus.read;\n      bus.read = function(a) {\n        var v = this.oldRead(a);\n        if (a > 0 && a < 0x80) probe.logIORead(a,v); // (00),x reads $00?\n        else if (a > 0x280 && a < 0x300) probe.logIORead(a,v);\n        else probe.logRead(a,v);\n        return v;\n      }\n      bus.oldWrite = bus.write;\n      bus.write = function(a,v) {\n        this.oldWrite(a,v);\n        if (a == 0x02) probe.logWait(a); // WSYNC\n        else if (a < 0x80) probe.logIOWrite(a,v);\n        else if (a > 0x280 && a < 0x300) probe.logIOWrite(a,v);\n        else probe.logWrite(a,v);\n      }\n    }\n    return rec;\n  }\n  stopProbing?() : void {\n    this.connectProbe(null);\n    var cpu = Javatari.room.console.cpu;\n    if (cpu.oldCPUClockPulse != null) {\n      cpu.clockPulse = cpu.oldCPUClockPulse;\n      cpu.oldCPUClockPulse = null;\n    }\n    var bus = Javatari.room.console.bus;\n    if (bus.oldRead) {\n      bus.read = bus.oldRead;\n      bus.oldRead = null;\n    }\n    if (bus.oldWrite) {\n      bus.write = bus.oldWrite;\n      bus.oldWrite = null;\n    }\n  }\n  connectProbe(probe:ProbeAll) {\n    this.probe = probe || this.nullProbe;\n  }\n\n  // resizing\n  resize() {\n    var scale = Math.min(1, ($('#emulator').width() - 24) / 640);\n    var xt = (1 - scale) * 50;\n    $('#javatari-div').css('transform', `translateX(-${xt}%) translateY(-${xt}%) scale(${scale})`);\n  }\n  updateVideoDebugger() {\n    const {x,y} = this.getRasterCanvasPosition();\n    if (x >= 0 || y >= 0) {\n      const ctx = this.canvas?.getContext('2d');\n      if (ctx) {\n        drawCrosshair(ctx, x, y, 2);\n      }\n    }\n  }\n};\n\n// TODO: mixin for Base6502Platform?\n\nfunction nonegstr(n) {\n  return n < 0 ? \"-\" : n.toString();\n}\n\n///////////////\n\nclass VCSMAMEPlatform extends BaseMAME6502Platform implements Platform {\n\n//  MCFG_SCREEN_RAW_PARAMS( MASTER_CLOCK_NTSC, 228, 26, 26 + 160 + 16, 262, 24 , 24 + 192 + 31 )\n\n  start = function() {\n    this.startModule(this.mainElement, {\n      jsfile:'mame8bitws.js',\n      driver:'a2600',\n      width:176*2,\n      height:223,\n      romfn:'/emulator/cart.rom',\n      romsize:0x1000,\n    });\n  }\n\n  loadROM = function(title, data) {\n    this.loadROMFile(data);\n    this.loadRegion(\":cartslot:cart:rom\", data);\n  }\n\n  getPresets = function() { return VCS_PRESETS; }\n\n  getToolForFilename = getToolForFilename_vcs;\n  getDefaultExtension() { return \".dasm\"; }\n  getROMExtension() { return \".a26\"; }\n\n  getOriginPC = function() {\n    return (this.readAddress(0xfffc) | (this.readAddress(0xfffd) << 8)) & 0xffff;\n  }\n  \n}\n\n////////////////\n\nclass VCSStellaPlatform implements Platform {\n\n  mainElement: HTMLElement;\n  Stellerator;\n  stellerator;\n  running: boolean = false;\n\n  constructor(mainElement: HTMLElement) {\n    this.mainElement = mainElement;\n  }\n  async start() {\n    await loadScript('lib/stellerator/stellerator-embedded.min.js');\n    const $6502 : any = window['$6502'];\n    this.Stellerator = $6502.Stellerator;\n    // create a canvas, stellerator will override width/height but we need CSS aspect ratio\n    const canvas = __createCanvas(window.document, this.mainElement, 28, 20);\n    // stellerator adds overscan, we don't need as much\n    canvas.style.padding = '10px';\n    this.stellerator = new this.Stellerator(canvas, 'lib/stellerator/stellerator.min.js',\n      {\n          gamma: 0.8,\n          scalingMode: this.Stellerator.ScalingMode.qis,\n          tvEmulation: this.Stellerator.TvEmulation.composite,\n          phosphorLevel: 0.25,\n          scanlineLevel: 0.2,\n          keyboardTarget: this.mainElement\n      }\n    );\n  }\n  loadROM(title, data) {\n    this.stellerator.run(data, this.Stellerator.TvMode.ntsc);\n  }\n  reset() {\n    this.stellerator.reset();\n  }\n  pause() {\n    this.running = false;\n    this.stellerator.pause();\n  }\n  resume() {\n    this.running = true;\n    this.stellerator.resume();\n  }\n  isRunning() {\n    return this.running;\n  }\n  getToolForFilename = getToolForFilename_vcs;\n  getDefaultExtension() { return \".dasm\"; }\n  getROMExtension() { return \".a26\"; }  \n  getPresets() { return VCS_PRESETS }\n}\n\n////////////////\n\nPLATFORMS['vcs'] = VCSPlatform;\nPLATFORMS['vcs.mame'] = VCSMAMEPlatform;\nPLATFORMS['vcs.stellerator'] = VCSStellaPlatform;\n"],
  "mappings": "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",
  "names": ["VCS_PRESETS", "getToolForFilename_vcs", "fn", "VCSPlatform", "BasePlatform", "NullProbe", "self", "loadScript", "jaconsole", "videoSignal", "pixels", "vsync", "jacanvas", "entries", "title", "data", "EmuHalt", "wasrunning", "opcode", "offset", "clkfs", "row", "col", "xpos", "ypos", "p", "x", "y", "canvasPos", "evalfunc", "callback", "state", "CodeAnalyzer_vcs", "_a", "_b", "_c", "ofs", "addr", "value", "depth", "c", "cpuStateToLongString_6502", "ram", "dumpRAM", "category", "dumpStackToString", "hex", "t", "pos", "s", "lpad", "j", "tobin", "nonegstr", "pc", "read", "disassemble6502", "rec", "ProbeRecorder", "probe", "cpu", "bus", "a", "v", "scale", "xt", "ctx", "drawCrosshair", "n", "VCSMAMEPlatform", "BaseMAME6502Platform", "VCSStellaPlatform", "mainElement", "$6502", "canvas", "__createCanvas", "PLATFORMS"]
}
