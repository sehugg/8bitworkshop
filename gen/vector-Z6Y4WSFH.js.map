{
  "version": 3,
  "sources": ["../src/platform/vector.ts"],
  "sourcesContent": ["\nimport { Platform, BaseZ80Platform, Base6502Platform  } from \"../common/baseplatform\";\nimport { PLATFORMS, RAM, newAddressDecoder, padBytes, noise, setKeyboardFromMap, AnimationTimer, VectorVideo, Keys, makeKeycodeMap } from \"../common/emu\";\nimport { hex } from \"../common/util\";\nimport { MasterAudio, POKEYDeviceChannel, newPOKEYAudio } from \"../common/audio\";\n\n// http://www.computerarcheology.com/Arcade/Asteroids/DVG.html\n// http://arcarc.xmission.com/Tech/neilw_xy.txt\n\nvar VECTOR_PRESETS = [\n  {id:'font.c', name:'Vector Fonts'},\n  {id:'threed.c', name:'3D Transformations'},\n  {id:'game.c', name:'Space Game'},\n  {id:'music.c', name:'POKEY Music'},\n]\n\nvar ASTEROIDS_KEYCODE_MAP = makeKeycodeMap([\n  [Keys.B,      3, 0xff],\n  [Keys.A,      4, 0xff],\n  [Keys.SELECT, 8, 0xff],\n  [Keys.VK_6,   9, 0xff],\n  [Keys.VK_7,   10, 0xff],\n  [Keys.START,  11, 0xff],\n  [Keys.P2_START, 12, 0xff],\n  [Keys.UP,     13, 0xff],\n  [Keys.RIGHT,  14, 0xff],\n  [Keys.LEFT,   15, 0xff],\n]);\n\nvar GRAVITAR_KEYCODE_MAP = makeKeycodeMap([\n  [Keys.B,      1, -0x1],\n  [Keys.A,      1, -0x2],\n  [Keys.VK_5,   0, 0x2],\n  [Keys.VK_6,   0, 0x1],\n  [Keys.START,  2, 0x20],\n  [Keys.P2_START, 2, 0x40],\n  [Keys.UP,     1, -0x10],\n  [Keys.DOWN,   1, -0x20],\n  [Keys.RIGHT,  1, -0x4],\n  [Keys.LEFT,   1, -0x8],\n]);\n\nvar AtariVectorPlatform = function(mainElement) {\n  var XTAL = 12096000;\n  var cpuFrequency = XTAL/8;\n  var cpuCyclesPer3khz = Math.round(cpuFrequency/(XTAL/4096)); // ~3 Khz\n  var cpuCyclesPerNMI = Math.round(cpuFrequency*12/(XTAL/4096)); // ~250 Hz\n  var cpuCyclesPerFrame = Math.round(cpuFrequency/60);\n  var cpu, cpuram, dvgram, rom, vecrom, bus, dvg;\n  var video, audio, timer;\n  var clock;\n  var watchdog = 0;\n  var switches = new RAM(16).mem;\n  var nmicount = cpuCyclesPerNMI;\n\n  this.__proto__ = new (Base6502Platform as any)();\n\n  this.showHelp = function() {\n    return \"https://8bitworkshop.com/docs/platforms/arcade/index.html#vector-games\"\n  }\n\n  this.getPresets = function() {\n    return VECTOR_PRESETS;\n  }\n\n  this.start = function() {\n    cpuram = new RAM(0x400);\n    dvgram = new RAM(0x2000);\n    //switches[5] = 0xff;\n    //switches[7] = 0xff;\n    // bus\n    bus = {\n\n      read: newAddressDecoder([\n        [0x0,    0x3ff,  0x3ff,  function(a) { return cpuram.mem[a]; }],\n        [0x2001, 0x2001, 0,      function(a) { return ((clock / cpuCyclesPer3khz) & 1) ? 0xff : 0x00; }],\n        [0x2000, 0x2007, 0x7,    function(a) { return switches[a]; }],\n        [0x2400, 0x2407, 0x7,    function(a) { return switches[a+8]; }],\n        [0x4000, 0x4fff, 0xfff,  function(a) { return dvgram.mem[a]; }],\n        [0x5000, 0x5fff, 0xfff,  function(a) { return vecrom[a]; }],\n        [0x6800, 0x7fff, 0,      function(a) { return rom ? rom[a - 0x6800] : 0; }],\n      ], {gmask:0x7fff}),\n\n      write: newAddressDecoder([\n        [0x0,    0x3ff,  0x3ff,  function(a,v) { cpuram.mem[a] = v; }],\n        [0x3000, 0x3000, 0,      function(a,v) { dvg.runUntilHalt(0); }],\n        [0x3400, 0x3400, 0,      function(a,v) { watchdog = 0; }],\n        // TODO: draw asynchronous or allow poll of HALT ($2002)\n        [0x4000, 0x5fff, 0x1fff, function(a,v) { dvgram.mem[a] = v; }],\n      ], {gmask:0x7fff})\n\n    };\n    this.readAddress = bus.read;\n    cpu = this.newCPU(bus);\n    // create video/audio\n    video = new VectorVideo(mainElement,1024,1024);\n    dvg = new DVGBWStateMachine(bus, video, 0x4000);\n    audio = newPOKEYAudio(2);\n    video.create();\n    timer = new AnimationTimer(60, this.nextFrame.bind(this));\n    setKeyboardFromMap(video, switches, ASTEROIDS_KEYCODE_MAP);\n  }\n\n  this.advance = (novideo) => {\n      if (!novideo) video.clear();\n      var debugCond = this.getDebugCallback();\n      clock = 0;\n      for (var i=0; i<cpuCyclesPerFrame; i++) {\n        if (debugCond && debugCond()) {\n          debugCond = null;\n          break;\n        }\n        clock++;\n        if (--nmicount == 0) {\n          //console.log(\"NMI\", cpu.saveState());\n          var n = cpu.setNMIAndWait();\n          clock += n;\n          nmicount = cpuCyclesPerNMI - n;\n        }\n        cpu.clockPulse();\n        //cpu.executeInstruction();\n      }\n      //if (++watchdog == 256) { watchdog = 0; cpu.reset(); }\n  }\n\n  this.loadROM = function(title, data) {\n    if(data.length != 0x2000) {\n      throw Error(\"ROM length must be == 0x2000\");\n    }\n    rom = data.slice(0,0x1800);\n    vecrom = data.slice(0x1800,0x2000);\n    this.reset();\n  }\n\n  this.isRunning = function() {\n    return timer && timer.isRunning();\n  }\n  this.pause = function() {\n    timer.stop();\n    audio.stop();\n  }\n  this.resume = function() {\n    timer.start();\n    audio.start();\n  }\n  this.reset = function() {\n    this.clearDebug();\n    cpu.reset();\n  }\n\n  this.loadState = function(state) {\n    cpu.loadState(state.c);\n    cpuram.mem.set(state.b);\n    dvgram.mem.set(state.db);\n    switches.set(state.sw);\n    nmicount = state.nmic;\n  }\n  this.saveState = function() {\n    return {\n      c:cpu.saveState(),\n      b:cpuram.mem.slice(0),\n      db:dvgram.mem.slice(0),\n      sw:switches.slice(0),\n      nmic:nmicount\n    }\n  }\n  this.loadControlsState = function(state) {\n    switches.set(state.sw);\n  }\n  this.saveControlsState = function() {\n    return {\n      sw:switches.slice(0),\n    }\n  }\n  this.getCPUState = function() {\n    return cpu.saveState();\n  }\n  this.getMemoryMap = function() { return { main:[\n      {name:'Switches/POKEY I/O',start:0x7800,size:0x1000,type:'io'},\n      {name:'DVG I/O',start:0x8800,size:0x100,type:'io'},\n      {name:'EAROM',start:0x8900,size:0x100,type:'ram'},\n  ] } };\n}\n\nvar AtariColorVectorPlatform = function(mainElement) {\n  var masterFrequency = 12096000.0;\n  var cpuFrequency = masterFrequency / 8;\n  var nmiFrequency = masterFrequency / 4096 / 12;\n  var cpuCyclesPerNMI = Math.round(cpuFrequency / nmiFrequency);\n  var cpuCyclesPerFrame = Math.round(cpuFrequency / 60);\n  var cpu, cpuram, dvgram, rom, vecrom, bus, dvg, earom;\n  var video, audio, timer;\n  var clock;\n  var switches = new RAM(16).mem;\n  var nmicount = cpuCyclesPerNMI;\n  var earom_offset, earom_data;\n\n  this.__proto__ = new (Base6502Platform as any)();\n  //this.debugPCDelta = 0;\n\n  this.getPresets = function() {\n    return VECTOR_PRESETS;\n  }\n\n  this.start = function() {\n    cpuram = new RAM(0x800);\n    dvgram = new RAM(0x2000);\n    earom = new RAM(0x40);\n    //rom = padBytes(new lzgmini().decode(GRAVITAR_ROM).slice(0), 0x7000+1);\n    //vecrom = padBytes(new lzgmini().decode(GRAVITAR_VECROM).slice(0), 0x6000-0x2800+1);\n    switches[0] = 0x0;\n    switches[1] = 0xff;\n    switches[2] = 0x0;\n    // bus\n    bus = {\n\n      read: newAddressDecoder([\n        [0x0,    0x7ff,  0x7ff,  function(a) { return cpuram.mem[a]; }],\n        [0x2000, 0x27ff, 0x7ff,  function(a) { return dvgram.mem[a]; }],\n        [0x2800, 0x5fff, 0x7fff, function(a) { return vecrom[a - 0x2800]; }],\n        //[0x2001, 0x2001, 0,      function(a) { return ((clock/500) & 1) ? 0xff : 0x00; }],\n        //[0x6000, 0x67ff, 0x7ff,  function(a) { /* pokey1 */ return 0; }],\n        //[0x6800, 0x6fff, 0x7ff,  function(a) { /* pokey2 */ return 0; }],\n        [0x7800, 0x7800, 0,      function(a) { return switches[0]; }],\n        [0x8000, 0x8000, 0,      function(a) { return switches[1]; }],\n        [0x8800, 0x8800, 0,      function(a) { return switches[2]; }],\n        //[0x7000, 0x7000, 0,      function(a) { /* EAROM read */ return 0; }],\n        //[0x8940, 0x897f, 0x3f,   function(a) { /* EAROM data */ return 0; }],\n        [0x8900, 0x8900, 0,      function(a) { /* EAROM read */ return earom_data; }],\n        [0x9000, 0xffff, 0xffff, function(a) { return rom ? rom[a - 0x9000] : 0; }],\n      ]),\n\n      write: newAddressDecoder([\n        [0x0,    0x7ff,  0x7ff,  function(a,v) { cpuram.mem[a] = v; }],\n        [0x2000, 0x27ff, 0x7ff,  function(a,v) { dvgram.mem[a] = v; }],\n        [0x2800, 0x5fff, 0x7fff, function(a,v) { vecrom[a - 0x2800] = v; }], // TODO: remove (it's ROM!)\n        [0x6000, 0x67ff, 0xf,    function(a,v) { audio.pokey1.setRegister(a, v); }],\n        [0x6800, 0x6fff, 0xf,    function(a,v) { audio.pokey2.setRegister(a, v); }],\n        [0x8800, 0x8800, 0,      function(a,v) { /* LEDs, etc */ }],\n        [0x8840, 0x8840, 0,      function(a,v) { dvg.runUntilHalt(0); }],\n        [0x8880, 0x8880, 0,      function(a,v) { dvg.reset(); }],\n        [0x88c0, 0x88c0, 0,      function(a,v) { /* IRQ ACK */ }],\n        [0x8900, 0x8900, 0,      function(a,v) { /* EAROM ctrl */\n          if (v == 9) earom_data=earom.mem[earom_offset];\n          if (v == 12) earom.mem[earom_offset]=earom_data;\n        }],\n        [0x8940, 0x897f, 0x3f,   function(a,v) { /* EAROM data */ earom_offset = a; earom_data = v; }],\n        [0x8980, 0x8980, 0,      function(a,v) { /* TODO: watchdog */ }],\n        // TODO: draw asynchronous or allow poll of HALT ($2002)\n        //[0, 0xffff, 0,    function(a,v) { console.log(hex(a,4),hex(v,2)); }],\n      ])\n\n    };\n    this.readAddress = bus.read;\n    cpu = this.newCPU(bus);\n    // create video/audio\n    video = new VectorVideo(mainElement,1024,1024);\n    dvg = new DVGColorStateMachine(bus, video, 0x2000);\n    audio = newPOKEYAudio(2);\n    video.create();\n    timer = new AnimationTimer(60, this.nextFrame.bind(this));\n    setKeyboardFromMap(video, switches, GRAVITAR_KEYCODE_MAP);\n  }\n\n  this.advance = (novideo) => {\n      if (!novideo) video.clear();\n      var debugCond = this.getDebugCallback();\n      clock = 0;\n      for (var i=0; i<cpuCyclesPerFrame; i++) {\n        if (debugCond && debugCond()) {\n          debugCond = null;\n          break;\n        }\n        clock++;\n        if (--nmicount == 0) {\n          //console.log(\"NMI\", cpu.saveState());\n          var n = cpu.setIRQ(); // TODO: only if I flag set\n          clock += n;\n          nmicount = cpuCyclesPerNMI - n;\n          //console.log(n, clock, nmicount);\n        }\n        cpu.clockPulse();\n        //cpu.executeInstruction();\n      }\n  }\n\n  this.loadROM = function(title, data) {\n    rom = data.slice(0, 0x7000);\n    vecrom = padBytes(data.slice(0x7000), 0x3800);\n    this.reset();\n  }\n\n  this.isRunning = function() {\n    return timer && timer.isRunning();\n  }\n  this.pause = function() {\n    timer.stop();\n    audio.stop();\n  }\n  this.resume = function() {\n    timer.start();\n    audio.start();\n  }\n  this.reset = function() {\n    this.clearDebug();\n    cpu.reset();\n  }\n\n  this.loadState = function(state) {\n    this.unfixPC(state.c);\n    cpu.loadState(state.c);\n    this.fixPC(state.c);\n    cpuram.mem.set(state.b);\n    dvgram.mem.set(state.db);\n    switches.set(state.sw);\n    nmicount = state.nmic;\n  }\n  this.saveState = function() {\n    return {\n      c:this.getCPUState(),\n      b:cpuram.mem.slice(0),\n      db:dvgram.mem.slice(0),\n      sw:switches.slice(0),\n      nmic:nmicount\n    }\n  }\n  this.loadControlsState = function(state) {\n    switches.set(state.sw);\n  }\n  this.saveControlsState = function() {\n    return {\n      sw:switches.slice(0),\n    }\n  }\n  this.getCPUState = function() {\n    return this.fixPC(cpu.saveState());\n  }\n}\n\n//\n\nvar Z80ColorVectorPlatform = function(mainElement, proto) {\n  var cpuFrequency = 4000000.0;\n  var cpuCyclesPerFrame = Math.round(cpuFrequency/60);\n  var cpu, cpuram, dvgram, rom, bus, dvg;\n  var video, audio, timer;\n  var clock;\n  var switches = new RAM(16).mem;\n  var mathram = new RAM(16).mem;\n\n  this.__proto__ = new (BaseZ80Platform as any)();\n\n  this.getPresets = function() {\n    return VECTOR_PRESETS;\n  }\n\n  function do_math() {\n    var sum = (((mathram[0] + (mathram[1]<<8)) << 16) >> 16);\n    var a = (mathram[2] << 24) >> 24;\n    var b = (mathram[3] << 24) >> 24;\n    var d = a!=0 ? (sum/a) : 0;\n    sum += (a*b) & 0xffff;\n    mathram[0] = sum & 0xff;\n    mathram[1] = (sum >> 8) & 0xff;\n    mathram[4] = d & 0xff;\n    mathram[5] = (d >> 8) & 0xff;\n  }\n\n  this.start = function() {\n    cpuram = new RAM(0x2000);\n    dvgram = new RAM(0x4000);\n    switches[0] = 0x0;\n    switches[1] = 0xff;\n    switches[2] = 0x0;\n    // bus\n    bus = {\n\n      read: newAddressDecoder([\n        [0x0,    0x7fff, 0,      function(a) { return rom ? rom[a] : 0; }],\n        [0x8000, 0x800f, 0xf,    function(a) { return switches[a]; }],\n        [0x8100, 0x810f, 0xf,    function(a) { return mathram[a]; } ],\n        [0xa000, 0xdfff, 0x3fff, function(a) { return dvgram.mem[a]; }],\n        [0xe000, 0xffff, 0x1fff, function(a) { return cpuram.mem[a]; }],\n      ]),\n\n      write: newAddressDecoder([\n        [0x8000, 0x800f, 0xf,    function(a,v) { audio.pokey1.setRegister(a, v); }],\n        [0x8010, 0x801f, 0xf,    function(a,v) { audio.pokey2.setRegister(a, v); }],\n        [0x8100, 0x810e, 0xf,    function(a,v) { mathram[a] = v; } ],\n        [0x810f, 0x810f, 0,      function(a,v) { do_math(); } ],\n        [0x8840, 0x8840, 0,      function(a,v) { dvg.runUntilHalt(0); }],\n        [0x8880, 0x8880, 0,      function(a,v) { dvg.reset(); }],\n        [0x8980, 0x8980, 0,      function(a,v) { switches[0xe] = 16; }],\n        [0xa000, 0xdfff, 0x3fff, function(a,v) { dvgram.mem[a] = v; }],\n        [0xe000, 0xffff, 0x1fff, function(a,v) { cpuram.mem[a] = v; }],\n      ])\n\n    };\n    this.readAddress = bus.read;\n    cpu = this.newCPU(bus, bus);\n    // create video/audio\n    video = new VectorVideo(mainElement,1024,1024);\n    dvg = new DVGColorStateMachine(bus, video, 0xa000);\n    audio = newPOKEYAudio(2);\n    video.create();\n    timer = new AnimationTimer(60, this.nextFrame.bind(this));\n    setKeyboardFromMap(video, switches, GRAVITAR_KEYCODE_MAP);\n  }\n\n  this.advance = (novideo) => {\n      if (!novideo) video.clear();\n      this.runCPU(cpu, cpuCyclesPerFrame);\n      cpu.interrupt(0xff); // RST 0x38\n      switches[0xf] = (switches[0xf] + 1) & 0x3;\n      if (--switches[0xe] <= 0) {\n        console.log(\"WATCHDOG FIRED\"); // TODO: alert on video\n        this.reset(); // watchdog reset\n      }\n  }\n\n  this.loadROM = function(title, data) {\n    rom = padBytes(data, 0x8000);\n    this.reset();\n  }\n\n  this.isRunning = function() {\n    return timer && timer.isRunning();\n  }\n  this.pause = function() {\n    timer.stop();\n    audio.stop();\n  }\n  this.resume = function() {\n    timer.start();\n    audio.start();\n  }\n  this.reset = function() {\n    switches[0xe] = 16;\n    cpu.reset();\n  }\n\n  this.loadState = function(state) {\n    cpu.loadState(state.c);\n    cpuram.mem.set(state.b);\n    dvgram.mem.set(state.db);\n    switches.set(state.sw);\n    mathram.set(state.mr);\n  }\n  this.saveState = function() {\n    return {\n      c:cpu.saveState(),\n      b:cpuram.mem.slice(0),\n      db:dvgram.mem.slice(0),\n      sw:switches.slice(0),\n      mr:mathram.slice(0),\n    }\n  }\n  this.loadControlsState = function(state) {\n    switches.set(state.sw);\n  }\n  this.saveControlsState = function() {\n    return {\n      sw:switches.slice(0),\n    }\n  }\n  this.getCPUState = function() {\n    return cpu.saveState();\n  }\n  this.getMemoryMap = function() { return { main:[\n      {name:'Switches/POKEY I/O',start:0x8000,size:0x100,type:'io'},\n      {name:'Math Box I/O',start:0x8100,size:0x100,type:'io'},\n      {name:'DVG I/O',start:0x8800,size:0x100,type:'io'},\n      {name:'DVG RAM',start:0xa000,size:0x4000,type:'ram'},\n  ] } };\n}\n\n// DIGITAL VIDEO GENERATOR\n\nvar DVGBWStateMachine = function(bus, video, bofs) {\n  var pc = 0;\n  var x = 0;\n  var y = 0;\n  var gsc = 0;\n  var pcstack = [];\n  var running = false;\n  bofs &= 0xffff;\n\n  function readWord(a) {\n    a &= 0xfff;\n    var v = bus.read(a*2+bofs) + (bus.read(a*2+bofs+1) << 8);\n    //console.log(hex(a*2+bofs,4), hex(v,4), hex(x>>2), hex(y>>2));\n    return v;\n  }\n\n  function decodeSigned(w, o2) {\n    var s = w & (1<<o2);\n    w = w & ((1<<o2)-1);\n    if (s)\n      return -w;\n    else\n      return w;\n  }\n\n  this.reset = function() {\n    pc = 0;\n    gsc = 7;\n    running = false;\n  }\n\n  this.go = function() {\n    this.reset();\n    running = true;\n  }\n\n  this.runUntilHalt = function(startpc) {\n    this.go();\n    pc = startpc;\n    for (var i=0; i<10000; i++) { // TODO: limit execution\n      if (!running) break;\n      this.nextInstruction();\n    }\n    //console.log('DVG',i);\n  }\n\n  var GSCALES = [7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8];\n\n  this.nextInstruction = function() {\n    if (!running) return;\n    var w = readWord(pc);\n    var op = w >> 12;\n    //console.log(hex(pc*2+bofs), hex(w), hex(x>>2), hex(y>>2), hex(32-pcstack.length*2));\n    pc++;\n    switch (op) {\n      // VEC\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9: { // VCTR\n        var sc = gsc + 9 - op;\n        var w2 = readWord(pc++);\n        var z = w2 >> 12;\n        var x2 = x + ((decodeSigned(w2, 10) << 7) >> sc);\n        var y2 = y + ((decodeSigned(w, 10) << 7) >> sc);\n        video.drawLine(x, y, x2, y2, z*32, 7);\n        //console.log(pc.toString(16), w.toString(16), w2.toString(16), gsc, sc, x, y, x2, y2);\n        x = x2;\n        y = y2;\n        break;\n      }\n      case 10: { // LABS\n        var w2 = readWord(pc++);\n        gsc = GSCALES[w2 >> 12];\n        x = w2 & 0x3ff;\n        y = w & 0x3ff;\n        break;\n      }\n      case 11: // HALT\n        running = false;\n        break;\n      case 13: // RTSL\n        pc = pcstack.pop();\n        break;\n      case 12: // JSRL\n        pcstack.push(pc);\n      case 14: // JMPL\n        pc = w & 0xfff;\n        break;\n      case 15: { // SVEC\n        var sc = ((w>>11)&1) + ((w>>2)&2);\n        sc = gsc - sc - 1;\n        var x2 = x + ((decodeSigned(w, 2) << 7) >> sc);\n        var y2 = y + ((decodeSigned(w>>8, 2) << 7) >> sc);\n        var z = (w >> 4) & 0xf;\n        video.drawLine(x, y, x2, y2, z*32, 7);\n        x = x2;\n        y = y2;\n        break;\n      }\n    }\n  }\n}\n\nvar DVGColorStateMachine = function(bus, video, bofs) {\n  var pc = 0;\n  var x = 0;\n  var y = 0;\n  var scale = 1.0;\n  var color;\n  var statz;\n  var sparkle;\n  var pcstack = [];\n  var running = false;\n\n  bofs &= 0xffff;\n\n  function readWord(a) {\n    a &= 0x1fff;\n    return bus.read(a*2+bofs) + (bus.read(a*2+bofs+1) << 8);\n  }\n\n  // twos complement\n  function decodeSigned(w, o2) {\n    var s = w & (1<<o2);\n    w = w & ((1<<o2)-1);\n    if (s)\n      return w-(1<<o2);\n    else\n      return w;\n  }\n\n  function sparkle_color() {\n    return (Math.random() * 256) & 0x7;\n  }\n\n  this.reset = function() {\n    pc = 0;\n    scale = 1.0;\n    color = 7;\n    statz = 15;\n    x = 512;\n    y = 512;\n    sparkle = false;\n    running = false;\n  }\n\n  this.go = function() {\n    this.reset();\n    running = true;\n  }\n\n  this.runUntilHalt = function(startpc) {\n    this.go();\n    pc = startpc;\n    for (var i=0; i<10000; i++) { // TODO: limit execution\n      if (!running) break;\n      this.nextInstruction();\n    }\n    //console.log('DVG',i);\n  }\n\n  this.nextInstruction = function() {\n    if (!running) return;\n    var w = readWord(pc);\n    var op = w >> 13;\n    //video.drawLine(pc, 1023, pc+1, 1023-op, 7);\n    //console.log(hex(pc), hex(w), op);\n    pc++;\n    switch (op) {\n      case 0: { // VCTR\n        var w2 = readWord(pc++);\n        var z = w2 >> 13;\n        if (z == 2) z = statz;\n        var x2 = x + Math.round(decodeSigned(w2, 12) * scale);\n        var y2 = y + Math.round(decodeSigned(w, 12) * scale);\n        if (sparkle) color = sparkle_color();\n        video.drawLine(x, y, x2, y2, z<<4, color);\n        x = x2;\n        y = y2;\n        break;\n      }\n      case 1: // HALT\n        running = false;\n        break;\n      case 2: { // SVEC\n        var x2 = x + Math.round(decodeSigned(w, 4) * scale * 2);\n        var y2 = y + Math.round(decodeSigned(w>>8, 4) * scale * 2);\n        var z = (w >> 5) & 0x7;\n        if (z == 2) z = statz;\n        if (sparkle) color = sparkle_color();\n        video.drawLine(x, y, x2, y2, z<<4, color);\n        x = x2;\n        y = y2;\n        break;\n      }\n      case 3: { // STAT/SCAL\n        if (w & 0x1000) { // SCAL\n          var b = ((w >> 8) & 0x07)+8;\n          var l = (~w) & 0xff;\n          scale = ((l << 16) >> b) / 32768.0;\n        } else { // STAT\n          color = w & 7;\n          statz = (w >> 4) & 0xf;\n          sparkle = (w & 0x800) != 0;\n        }\n        break;\n      }\n      case 4: // CNTR\n        x = 512;\n        y = 512;\n        break;\n      case 6: // RTSL\n        if (pcstack.length == 0) {\n          //console.log(\"stack underflow\"); // TODO: error?\n        } else {\n          pc = pcstack.pop();\n        }\n        break;\n      case 5: // JSRL\n        pcstack.push(pc);\n      case 7: // JMPL\n        if (pc == 0)\n          running = false;\n        else\n          pc = w & 0x1fff;\n        break;\n    }\n  }\n}\n\n//\n\nPLATFORMS['vector-ataribw'] = AtariVectorPlatform;\nPLATFORMS['vector-ataricolor'] = AtariColorVectorPlatform;\nPLATFORMS['vector-z80color'] = Z80ColorVectorPlatform;\n"],
  "mappings": "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",
  "names": ["VECTOR_PRESETS", "ASTEROIDS_KEYCODE_MAP", "makeKeycodeMap", "Keys", "GRAVITAR_KEYCODE_MAP", "AtariVectorPlatform", "mainElement", "XTAL", "cpuFrequency", "cpuCyclesPer3khz", "cpuCyclesPerNMI", "cpuCyclesPerFrame", "cpu", "cpuram", "dvgram", "rom", "vecrom", "bus", "dvg", "video", "audio", "timer", "clock", "watchdog", "switches", "RAM", "nmicount", "Base6502Platform", "newAddressDecoder", "v", "VectorVideo", "DVGBWStateMachine", "newPOKEYAudio", "AnimationTimer", "setKeyboardFromMap", "novideo", "debugCond", "i", "n", "title", "data", "state", "AtariColorVectorPlatform", "masterFrequency", "nmiFrequency", "earom", "earom_offset", "earom_data", "a", "DVGColorStateMachine", "padBytes", "Z80ColorVectorPlatform", "proto", "mathram", "BaseZ80Platform", "do_math", "sum", "d", "bofs", "pc", "x", "y", "gsc", "pcstack", "running", "readWord", "decodeSigned", "w", "o2", "s", "startpc", "GSCALES", "op", "sc", "w2", "z", "x2", "y2", "scale", "color", "statz", "sparkle", "sparkle_color", "b", "l", "PLATFORMS"]
}
