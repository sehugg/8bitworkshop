{
  "version": 3,
  "sources": ["../src/common/teletype.ts"],
  "sourcesContent": ["\nimport { InputResponse } from \"./basic/runtime\";\n\nexport class TeleType {\n    page: HTMLElement;\n    fixed: boolean;\n    ncols: number = 80;\n    scrolldiv: HTMLElement;\n    bell; // Audio\n\n    curline: HTMLElement;\n    curstyle: number;\n    reverse: boolean;\n    col: number;\n    row: number;\n    lines: HTMLElement[];\n    ncharsout : number;\n\n    constructor(page: HTMLElement, fixed: boolean) {\n        this.page = page;\n        this.fixed = fixed;\n        this.clear();\n    }\n    clear() {\n        this.curline = null;\n        this.curstyle = 0;\n        this.reverse = false;\n        this.col = 0;\n        this.row = -1;\n        this.lines = [];\n        this.ncharsout = 0;\n        $(this.page).empty();\n        this.showPrintHead(true);\n    }\n    ensureline() {\n        if (this.curline == null) {\n            this.curline = this.lines[++this.row];\n            if (this.curline == null) {\n                this.curline = $('<div class=\"transcript-line\"/>')[0];\n                this.page.appendChild(this.curline);\n                this.lines[this.row] = this.curline;\n                this.scrollToBottom();\n            }\n        }\n    }\n    flushline() {\n        this.curline = null;\n        this.col = 0;\n        this.movePrintHead(false);\n    }\n    addtext(line: string, style: number) {\n        this.ensureline();\n        if (line.length) {\n            // in fixed mode, only do characters\n            if (this.fixed && line.length > 1) {\n                for (var i = 0; i < line.length; i++)\n                    this.addtext(line[i], style);\n                return;\n            }\n            // process control codes\n            if (line.length == 1) {\n                var ch = line.charCodeAt(0);\n                switch (ch) {\n                    case 7: if (this.bell) this.bell.play(); break;\n                    case 8: if (this.col > 0) this.col--; break;\n                    case 12: this.formfeed(); break;\n                    case 13: this.col = 0; break;\n                }\n                if (ch < 32) return; // ignore non-printables\n            }\n            var span = $(\"<span/>\").text(line);\n            for (var i = 0; i < 8; i++) {\n                if (style & (1 << i))\n                    span.addClass(\"transcript-style-\" + (1 << i));\n            }\n            if (this.reverse) span.addClass(\"transcript-reverse\");\n            //span.data('vmip', this.vm.pc);\n            // in fixed mode, we can overwrite individual characters\n            if (this.fixed && line.length == 1 && this.col < this.curline.childNodes.length) {\n                this.curline.replaceChild(span[0], this.curline.childNodes[this.col]);\n            } else {\n                span.appendTo(this.curline);\n            }\n            this.col += line.length;\n            // wrap @ 80 columns (TODO: const)\n            if (this.fixed && this.col >= this.ncols) this.flushline();\n            this.ncharsout += line.length;\n            this.movePrintHead(true);\n        }\n    }\n    newline() {\n        this.flushline();\n        this.ensureline();\n    }\n    print(val: string) {\n        // split by newlines\n        var lines = val.split(\"\\n\");\n        for (var i = 0; i < lines.length; i++) {\n            if (i > 0) this.newline();\n            this.addtext(lines[i], this.curstyle);\n        }\n    }\n    move_cursor(col: number, row: number) {\n        if (!this.fixed) return; // fixed windows only\n        // ensure enough row elements\n        while (this.lines.length <= row) {\n            this.flushline();\n            this.ensureline();\n        }\n        // select row element\n        this.curline = this.lines[row];\n        this.row = row;\n        // get children in row (individual text cells)\n        var children = $(this.curline).children();\n        // add whitespace to line?\n        if (children.length > col) {\n            this.col = col;\n        } else {\n            while (this.col < col)\n                this.addtext(' ', this.curstyle);\n        }\n    }\n    setrows(size: number) {\n        if (!this.fixed) return; // fixed windows only\n        // truncate rows?\n        var allrows = $(this.page).children();\n        if (allrows.length > size) {\n            this.flushline();\n            allrows.slice(size).remove();\n            this.lines = this.lines.slice(0, size);\n            //this.move_cursor(0,0); \n        }\n    }\n    formfeed() {\n        for (var i=0; i<60; i++) { this.newline(); this.ensureline(); }\n    }\n    scrollToBottom() {\n        this.curline.scrollIntoView();\n    }\n    movePrintHead(printing: boolean) {\n        /*\n        var ph = $(\"#printhead\"); // TODO: speed?\n        var x = $(this.page).position().left + this.col * ($(this.page).width() / 80) - 200;\n        ph.stop().animate({left: x}, {duration:20});\n        //ph.offset({left: x});\n        if (printing) ph.addClass(\"printing\");\n        else ph.removeClass(\"printing\");\n        */\n    }\n    showPrintHead(show: boolean) {\n        /*\n        var ph = $(\"#printhead\"); // TODO: speed?\n        if (show) ph.show(); else ph.hide();\n        */\n    }\n    resize(columns: number) {\n        // set font size proportional to window width\n        var charwidth = $(this.page).width() * 1.6 / columns;\n        $(this.page).css('font-size', charwidth + 'px');\n        this.scrollToBottom();\n    }\n    saveState() {\n        return {\n            curstyle: this.curstyle,\n            reverse: this.reverse,\n            col: this.col,\n            row: this.row,\n            ncharsout : this.ncharsout,\n            lines: this.lines.map((line) => line.cloneNode(true)),\n        }\n    }\n    loadState(state) {\n        this.curstyle = state.curstyle;\n        this.reverse = state.reverse;\n        this.col = state.col;\n        this.row = state.row;\n        this.ncharsout = state.ncharsout;\n        $(this.page).empty();\n        for (var i=0; i<state.lines.length; i++) {\n            this.page.appendChild(state.lines[i]);\n        }\n        this.lines = state.lines;\n        this.curline = state.lines[this.row];\n    }\n}\n\nexport class TeleTypeWithKeyboard extends TeleType {\n    input : HTMLInputElement;\n    msecPerLine : number = 100; // IBM 1403\n    keepinput : boolean = true;\n    keephandler : boolean = true;\n    uppercaseOnly : boolean = false;\n    splitInput : boolean = false;\n    resolveInput : (InputResponse) => void;\n\n    focused : boolean = true;\n    scrolling : number = 0;\n    waitingfor : string;\n    lastInputRequestTime : number;\n\n    constructor(page: HTMLElement, fixed: boolean, input: HTMLInputElement) {\n        super(page, fixed);\n        this.input = input;\n        this.input.onkeypress = (e) => {\n            this.sendkey(e);\n        };\n        this.input.onfocus = (e) => {\n            this.focused = true;\n            console.log('inputline gained focus');\n        };\n        $(\"#workspace\").on('click', (e) => {\n            this.focused = false;\n            console.log('inputline lost focus');\n        });\n        this.page.onclick = (e) => {\n            this.input.focus();\n        };\n    }\n    clear() {\n        super.clear();\n        this.hideinput();\n        this.waitingfor = null;\n    }\n    focusinput() {\n        this.ensureline();\n        this.showPrintHead(false);\n        // don't steal focus while editing\n        if (this.keepinput)\n            $(this.input).css('visibility', 'visible');\n        else\n            $(this.input).appendTo(this.curline).show()[0];\n        // scroll to bottom\n        this.scrollToBottom();\n        // refocus?\n        if (this.focused) {\n            $(this.input).focus();\n        }\n        // change size\n        if (this.waitingfor == 'char')\n            $(this.input).addClass('transcript-input-char')\n        else\n            $(this.input).removeClass('transcript-input-char')\n        this.lastInputRequestTime = Date.now();\n    }\n    hideinput() {\n        this.showPrintHead(true);\n        if (this.keepinput)\n            $(this.input).css('visibility','hidden');\n        else\n            $(this.input).appendTo($(this.page).parent()).hide();\n    }\n    clearinput() {\n        this.input.value = '';\n        this.waitingfor = null;\n    }\n    cancelinput() {\n        this.sendinput('');\n    }\n    sendkey(e: KeyboardEvent) {\n        if (this.waitingfor == 'line') {\n            if (e.key == \"Enter\") {\n                this.sendinput(this.input.value.toString());\n            }\n        } else if (this.waitingfor == 'char') {\n            this.sendchar(e.keyCode);\n            e.preventDefault();\n        }\n    }\n    sendinput(s: string) {\n        if (this.resolveInput) {\n            var elapsed = Date.now() - this.lastInputRequestTime;\n            if (this.uppercaseOnly) s = s.toUpperCase(); // TODO: always uppercase?\n            this.addtext(s, 4);\n            this.flushline();\n            this.clearinput();\n            this.hideinput(); // keep from losing input handlers\n            var vals = this.splitInput ? s.split(',') : null;\n            this.resolveInput({line:s, vals:vals, elapsed:elapsed/1000});\n            if (!this.keephandler) this.resolveInput = null;\n        }\n    }\n    sendchar(code: number) {\n        this.sendinput(String.fromCharCode(code));\n    }\n    ensureline() {\n        if (!this.keepinput) $(this.input).hide();\n        super.ensureline();\n    }\n    scrollToBottom() {\n        if (this.scrolldiv) {\n            this.scrolling++;\n            var top = $(this.page).height() + $(this.input).height();\n            $(this.scrolldiv).stop().animate({scrollTop: top}, this.msecPerLine, 'swing', () => {\n                this.scrolling = 0;\n                this.ncharsout = 0;\n            });\n        } else {\n            this.input.scrollIntoView();\n        }\n    }\n    isBusy() {\n        // stop execution when scrolling and printing non-newlines\n        return this.scrolling > 0 && this.ncharsout > 0;\n    }\n}\n"],
  "mappings": "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",
  "names": ["TeleType", "page", "fixed", "line", "style", "i", "ch", "span", "val", "lines", "col", "row", "children", "size", "allrows", "printing", "show", "columns", "charwidth", "state", "TeleTypeWithKeyboard", "input", "e", "s", "elapsed", "vals", "code", "top"]
}
