{
  "version": 3,
  "sources": ["../src/machine/devel.ts", "../src/platform/devel.ts"],
  "sourcesContent": ["\nimport { MOS6502 } from \"../common/cpu/MOS6502\";\nimport { BasicHeadlessMachine, HasSerialIO, SerialIOInterface } from \"../common/devices\";\nimport { padBytes, newAddressDecoder } from \"../common/emu\"; // TODO\n\nconst INPUT_HALTED = 31;\n\nexport class Devel6502 extends BasicHeadlessMachine implements HasSerialIO {\n\n  cpuFrequency = 1000000;\n  defaultROMSize = 0x8000;\n  \n  cpu = new MOS6502();\n  ram = new Uint8Array(0x4000);\n  rom : Uint8Array;\n  serial : SerialIOInterface;\n\n  constructor() {\n    super();\n    this.connectCPUMemoryBus(this);\n  }\n  \n  connectSerialIO(serial: SerialIOInterface) {\n    this.serial = serial;\n  }\n\n  read = newAddressDecoder([\n    [0x0000, 0x3fff, 0x3fff, (a) => { return this.ram[a]; }],\n    [0x4000, 0x4000, 0xffff, (a) => { return this.serial.byteAvailable() ? 0x80 : 0 }],\n    [0x4001, 0x4001, 0xffff, (a) => { return this.serial.recvByte() }],\n    [0x4002, 0x4002, 0xffff, (a) => { return this.serial.clearToSend() ? 0x80 : 0 }],\n    [0x8000, 0xffff, 0x7fff, (a) => { return this.rom && this.rom[a]; }],\n  ]);\n  \n  write = newAddressDecoder([\n    [0x0000, 0x3fff, 0x3fff, (a,v) => { this.ram[a] = v; }],\n    [0x4003, 0x4003, 0xffff, (a,v) => { return this.serial.sendByte(v) }],\n    [0x400f, 0x400f, 0xffff, (a,v) => { this.inputs[INPUT_HALTED] = 1; }],\n  ]);\n  \n  readConst(a:number) : number {\n    return this.read(a);\n  }\n\n  advanceFrame(trap) : number {\n    var clock = 0;\n    while (clock < this.cpuFrequency/60) {\n      if (trap && trap()) break;\n      clock += this.advanceCPU();\n    }\n    return clock;\n  }\n\n  advanceCPU() {\n    if (this.isHalted()) return 1;\n    var n = super.advanceCPU();\n    if (this.serial) this.serial.advance(n);\n    return n;\n  }\n\n  reset() {\n    this.inputs[INPUT_HALTED] = 0;\n    super.reset();\n    if (this.serial) this.serial.reset();\n  }\n\n  isHalted() { return this.inputs[INPUT_HALTED] != 0; }\n}\n\n", "\nimport { Platform } from \"../common/baseplatform\";\nimport { EmuHalt, PLATFORMS } from \"../common/emu\";\nimport { Devel6502 } from \"../machine/devel\";\nimport { Base6502MachinePlatform } from \"../common/baseplatform\";\nimport { SerialIOInterface } from \"../common/devices\";\nimport { byteArrayToString, convertDataToUint8Array } from \"../common/util\";\nimport { TeleType } from \"../common/teletype\";\nimport { haltEmulation } from \"../ide/ui\";\n\nvar DEVEL_6502_PRESETS = [\n  {id:'hello.dasm', name:'Hello World (ASM)'},\n];\n\nclass SerialInOutViewer {\n  div : HTMLElement;\n  tty : TeleType;\n  \n  constructor(div: HTMLElement) {\n    div.style.overflowY = 'auto';\n    var gameport = $('<div id=\"gameport\"/>').appendTo(div);\n    $('<p class=\"transcript-header\">Serial Output</p>').appendTo(gameport);\n    var windowport = $('<div id=\"windowport\" class=\"transcript\"/>').appendTo(gameport);\n    this.div = windowport[0];\n  }\n  start() {\n    this.tty = new TeleType(this.div, false);\n    //this.tty.ncols = 40;\n  }\n  reset() {\n    this.tty.clear();\n  }\n  saveState() {\n    return this.tty.saveState();\n  }\n  loadState(state) {\n    this.tty.loadState(state);\n  }\n}\n\nfunction byteToASCII(b: number) : string {\n  if (b == 10) return '';\n  if (b < 32)\n    return String.fromCharCode(b + 0x2400);\n  else\n    return String.fromCharCode(b);\n}\n\nexport class SerialTestHarness implements SerialIOInterface {\n\n  viewer : SerialInOutViewer;\n  bufferedRead : boolean = true;\n  cyclesPerByte = 1000000/(57600/8); // 138.88888 cycles\n  maxOutputBytes = 4096;\n  inputBytes : Uint8Array;\n\n  outputBytes : number[];\n  inputIndex : number;\n  clk : number;\n  bufin : string;\n\n  clearToSend(): boolean {\n    return this.outputBytes.length < this.maxOutputBytes;\n  }\n  sendByte(b: number) {\n    if (this.clearToSend()) {\n      this.outputBytes.push(b);\n      this.viewer.tty.addtext(byteToASCII(b), 2|32);\n      if (b == 10) this.viewer.tty.newline();\n      if (!this.clearToSend()) {\n        this.viewer.tty.newline();\n        this.viewer.tty.addtext(\"\u26A0\uFE0F OUTPUT BUFFER FULL \u26A0\uFE0F\", 4);\n      }\n    }\n  }\n  byteAvailable(): boolean {\n    return this.readIndex() > this.inputIndex;\n  }\n  recvByte(): number {\n    var index = this.readIndex();\n    this.inputIndex = index;\n    var b = (this.inputBytes && this.inputBytes[index]) | 0;\n    //this.bufin += byteToASCII(b);\n    this.viewer.tty.addtext(byteToASCII(b), 2|16);\n    if (b == 10) this.viewer.tty.newline();\n    return b;\n  }\n  readIndex(): number {\n    return this.bufferedRead ? (this.inputIndex+1) : Math.floor(this.clk / this.cyclesPerByte);\n  }\n\n  reset() {\n    this.inputIndex = -1;\n    this.clk = 0;\n    this.outputBytes = [];\n    this.bufin = '';\n  }\n\n  advance(clocks: number) {\n    this.clk += clocks;\n  }\n\n  saveState() {\n    return {\n      clk: this.clk,\n      idx: this.inputIndex,\n      out: this.outputBytes.slice()\n    }\n  }\n  loadState(state) {\n    this.clk = state.clk;\n    this.inputIndex = state.idx;\n    this.outputBytes = state.out.slice();\n  }\n}\n\nclass Devel6502Platform extends Base6502MachinePlatform<Devel6502> implements Platform {\n\n  serial : SerialTestHarness;\n  serview : SerialInOutViewer;\n\n  constructor(mainElement: HTMLElement) {\n    super(mainElement);\n    this.serview = new SerialInOutViewer(mainElement);\n  }\n\n  async start() {\n    super.start();\n    this.serial = new SerialTestHarness();\n    this.serial.viewer = this.serview;\n    this.serview.start();\n    this.machine.connectSerialIO(this.serial);\n  }\n\n  reset() {\n    this.serial.inputBytes = convertDataToUint8Array(this.internalFiles['serialin.dat']);\n    super.reset();\n    this.serview.reset();\n  }\n\n  isBlocked() {\n    return this.machine.isHalted();\n  }\n\n  advance(novideo: boolean) {\n    if (this.isBlocked()) {\n      this.internalFiles['serialout.dat'] = byteArrayToString(this.serial.outputBytes);\n      haltEmulation();\n      return 0;\n    }\n    return super.advance(novideo);\n  }\n\n  saveState() {\n    var state : any = super.saveState();\n    state.serial = this.serial.saveState();\n    state.serview = this.serview.saveState();\n    return state;\n  }\n\n  loadState(state) {\n    super.loadState(state);\n    this.serial.loadState(state.serial);\n    this.serview.loadState(state.serview);\n    // TODO: reload tty UI\n  }\n\n  newMachine()          { return new Devel6502(); }\n  getPresets()          { return DEVEL_6502_PRESETS; }\n  getDefaultExtension() { return \".dasm\"; };\n  readAddress(a)        { return this.machine.readConst(a); }\n\n  getMemoryMap = function() { return { main:[\n      {name:'RAM',          start:0x0000,size:0x4000,type:'ram'},\n      {name:'ROM',          start:0x8000,size:0x8000,type:'rom'},\n  ] } };\n}\n\n///\n\nPLATFORMS['devel-6502'] = Devel6502Platform;\n"],
  "mappings": "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",
  "names": ["INPUT_HALTED", "Devel6502", "BasicHeadlessMachine", "MOS6502", "newAddressDecoder", "a", "v", "serial", "trap", "clock", "n", "DEVEL_6502_PRESETS", "SerialInOutViewer", "div", "gameport", "windowport", "TeleType", "state", "byteToASCII", "b", "SerialTestHarness", "index", "clocks", "Devel6502Platform", "Base6502MachinePlatform", "mainElement", "convertDataToUint8Array", "novideo", "byteArrayToString", "haltEmulation", "Devel6502", "a", "PLATFORMS"]
}
