{
  "version": 3,
  "sources": ["../src/machine/coleco.ts", "../src/platform/coleco.ts"],
  "sourcesContent": ["\nimport { Z80, Z80State } from \"../common/cpu/ZilogZ80\";\nimport { BasicScanlineMachine } from \"../common/devices\";\nimport { BaseZ80VDPBasedMachine } from \"./vdp_z80\";\nimport { KeyFlags, newAddressDecoder, padBytes, Keys, makeKeycodeMap, newKeyboardHandler } from \"../common/emu\";\nimport { hex, lzgmini, stringToByteArray } from \"../common/util\";\nimport { TssChannelAdapter, MasterAudio, SN76489_Audio } from \"../common/audio\";\nimport { TMS9918A } from \"../common/video/tms9918a\";\n\n// http://www.colecovision.eu/ColecoVision/development/tutorial1.shtml\n// http://www.colecovision.eu/ColecoVision/development/libcv.shtml\n// http://www.kernelcrash.com/blog/recreating-the-colecovision/2016/01/27/\n// http://www.atarihq.com/danb/files/CV-Tech.txt\n// http://www.atarihq.com/danb/files/CV-Sound.txt\n// http://www.colecoboxart.com/faq/FAQ05.htm\n// http://www.theadamresource.com/manuals/technical/Jeffcoleco.html\n// http://bifi.msxnet.org/msxnet//tech/tms9918a.txt\n// http://www.colecovision.dk/tools.htm?refreshed\n// http://www.theadamresource.com/manuals/technical/ColecoVision%20Coding%20Guide.pdf\n// http://www.unige.ch/medecine/nouspikel/ti99/tms9918a.htm\n// http://map.grauw.nl/articles/vdp_tut.php\n// http://www.msxcomputermagazine.nl/mccw/91/msx1demos1/en.html\n// http://www.segordon.com/colecovision.php\n// http://samdal.com/svvideo.htm\n// https://github.com/tursilion/convert9918\n// http://www.harmlesslion.com/cgi-bin/showprog.cgi?ColecoVision\n\nvar COLECOVISION_KEYCODE_MAP = makeKeycodeMap([\n  [Keys.UP, 0, 0x1],\n  [Keys.DOWN, 0, 0x4],\n  [Keys.LEFT, 0, 0x8],\n  [Keys.RIGHT, 0, 0x2],\n  [Keys.A, 0, 0x40],\n  [Keys.B, 1, 0x40],\n  [Keys.GP_A, 0, 0x40],\n  [Keys.GP_B, 1, 0x40],\n\n  [Keys.P2_UP, 2, 0x1],\n  [Keys.P2_DOWN, 2, 0x4],\n  [Keys.P2_LEFT, 2, 0x8],\n  [Keys.P2_RIGHT, 2, 0x2],\n  [Keys.P2_A, 2, 0x40],\n  [Keys.P2_B, 3, 0x40],\n]);\n\nexport class ColecoVision extends BaseZ80VDPBasedMachine {\n\n  defaultROMSize = 0x8000;\n  ram = new Uint8Array(0x400);\n  bios: Uint8Array;\n  keypadMode: boolean;\n\n  constructor() {\n    super();\n    this.init(this, this.newIOBus(), new SN76489_Audio(new MasterAudio()));\n    this.bios = new lzgmini().decode(stringToByteArray(atob(COLECO_BIOS_LZG)));\n  }\n  \n  getKeyboardMap() { return COLECOVISION_KEYCODE_MAP; }\n  \n  vdpInterrupt() {\n    this.probe.logInterrupt(0);\n    this.cpu.NMI();\n  }\n  \n  read = newAddressDecoder([\n    [0x0000, 0x1fff, 0x1fff, (a) => { return this.bios ? this.bios[a] : 0; }],\n    [0x6000, 0x7fff, 0x03ff, (a) => { return this.ram[a]; }],\n    [0x8000, 0xffff, 0x7fff, (a) => { return this.rom ? this.rom[a] : 0; }],\n  ]);\n\n  write = newAddressDecoder([\n    [0x6000, 0x7fff, 0x03ff, (a, v) => { this.ram[a] = v; }],\n  ]);\n\n  newIOBus() {\n    return {\n      read: (addr:number):number => {\n        addr &= 0xff;\n        //console.log('IO read', hex(addr,4));\n        switch (addr) {\n          case 0xfc: return this.inputs[this.keypadMode ? 1 : 0] ^ 0xff;\n          case 0xff: return this.inputs[this.keypadMode ? 3 : 2] ^ 0xff;\n        }\n        if (addr >= 0xa0 && addr <= 0xbf) {\n          if (addr & 1)\n            return this.vdp.readStatus();\n          else\n            return this.vdp.readData();\n        }\n        return 0;\n      },\n      write: (addr:number, val:number) => {\n        addr &= 0xff;\n        val &= 0xff;\n        //console.log('IO write', hex(addr,4), hex(val,2));\n        switch (addr >> 4) {\n          case 0x8: case 0x9: this.keypadMode = true; break;\n          case 0xc: case 0xd: this.keypadMode = false; break;\n          case 0xa: case 0xb:\n            if (addr & 1)\n              return this.vdp.writeAddress(val);\n            else\n              return this.vdp.writeData(val);\n          case 0xf: this.psg.setData(val); break;\n        }\n      }\n    };\n  }\n\n  loadState(state) {\n    super.loadState(state);\n    this.keypadMode = state['kpm'];\n  }\n  saveState() {\n    var state = super.saveState();\n    state['kpm'] = this.keypadMode;\n    return state;\n  }\n  reset() {\n    super.reset();\n    this.keypadMode = false;\n  }\n}\n\nvar COLECO_BIOS_LZG = `\nTFpHAAAgAAAAB7djQcnHAQEDBgcx/3MYawAAAMMMgAehB+EPB+USB+UVB+UYB+UbB+UeB+QHHAZm\nIYA8igUCBYIAKgCAff5VIAl8/qogBCoKgOnHAwkfgICAAAMFT6CgB4LgByEH4WDAYMBABlggQIAg\nB+HAwOCgYAMGKweBQAYxBphAQEAG+KBABnAGEuAGUAabB+QA4AflBkggIAYyB+FgoKCgwAZdwAY5\nB+HABhAGYAfhIAZQoKDgIAMCcOCAwAaIYIDgoAZY4AMFOAYGBsgGIAZYAwJWBlAAQAMEcAYfQAZ4\nBhoDA3gGBgaQBjgGGwYfoOCAAwLIB+EDA/DAoAchAwNggAaQwAMFmOCAByEH5QZ4AwKABligAwUw\n4EBAQAZYICAgoAMCUAYuBpAGPwawoOAG4AfhAyNQQKCgBqDAoMADJECgoOADBGjgwAZYYIADBPgD\nAlADBEigAwVooAMFCAMEQAYHAwRQBg8GUAMiEAMEoAMEcAMD6gaQICAGyAADJZgDJ4gDI7gAwGAD\nI0CAwAME6AMC+QMCaCBgAwRwAGCgwAaIQOADA2AGJiAH4gZoAwPgA0M6ACAAAwX4gKDAAwPAAyLP\nAwNgAwXwAyNJAwR+AwX4oMADRQBgAyOgAyJxB+PAYANDEOBAQAMDeAMF+AfhA0RQAyJBB+NAAwPI\nBncGkOBgwAZQYECABrADQs8DAkjAQCBAA0QYAAMDUAcLOERsRFREOAA4fFR8RHw4AAAofHx8OBAA\nABA4B+MQODgQfHwDBQgQBhgAADAwB4H8/PzMzAeBAAB4SEh4BkiEtLSEBggcDDRISDAAOEREOBAG\neBgUEDBwYAAMNCw0LGxgAABUOGw4VAAAIDA4PDgwIAAIGDh4OBgIAwJXEAMCaCgHAgAoADxUVDQU\nFBQAOEQwKBhEAwNwAAB4eAMGIAchfBAHAQAHggMEqBh8GAfBABAwfDAH4gAAQEBAfAAAKCh8KCgG\nDxA4OHwGB3x8ODgGLwcHBg8GfgBsbEgGyQZnfCgAIDhAMAhwEABkZAgQIExMACBQUCBUSDQAMDAD\nZEsQIAcCEAAgAwJ5EAYMKDh8OCgGURB8AwdYBuV8AwdlAyIyBAgQAyKmOERMVGREOAAQMAZ4OAYI\nBBggQHwH4jgEBhAIGChIfAgIAHxAQHgGSAYVeEQH4XwGeCAgAyNYBkgHgTwECAMiijAwAySSB+Mg\nBh5AIBAIAwR3B0EGBAZyAwNgAwLoOERcVFxABrhEfEREAHhERAdCBghAQEBEOAZIBwF4AwN4AyJA\nB+RABlhcREQ8AAbvRAA4AwP4OAAEBwEDAohESFBgUEhEAyJ1AyN4RGxUBh9EAERkVEwGqAZGAwRY\nAwVIREQDIlAGSEgGmEADA/gDI9YQEAMCYAaoB8MoBkhUBwEoB+EoECgGKAaOBiB4AwLpQHgAOAMj\nkDgAAAMC9gQAADgIBwI4AAYlA0rv/DADRR0GGgQ8RDwABjQDA+gGCEQDAvgEBg4DAuAGSHhAAyJ4\nIHgDInAAAAYQPAQ4QEBwSAcBAANEehgACAAYCAgISDBAQAMD+QaOBlAAAGhUVEQDAnQG6AMCSAMC\nyAADI1p4QAMDSEQ8BAAAWCQgIHAGWEA4BAYYAwJnKAMCnAYuWANCUQME+AfiVHwGSEhIMAMDSAYY\nOBBgAAB4CDBAeAMCoGAgIBgDAngHYzAICAwICDAAKFADRuhsRER8AwPeQEQ4EDBIAwVYDAMF4Ach\nAyMIKAflMAflOCgH5AMkFxAwBiAGqAYgB+MGIAMFCAME8BAGgRgAIAMFCAYHKER8RAMCQGwH4gwA\nfEB4A2KYAHgUfFA8ADxQUHxQUFwAOAAwSAOCOCgH5WAH5TgDBaBgB+UoAwXwAwL9BugH5AAQOEBA\nOBAAGCQgeCAkXABEKBB8ByEAYFBQaFxISAAIFBA4EBBQIBgDBdADIyIQGAfhAwRgGAMGWFADI6kH\n4khoWEgDBSY8AwUeeAMi8DADQiAAA2ISA6N2/AQEB6FASFA4RAgcB+IsVBwEBmADglsGEiRIJAZf\nAEgkAyKuVACoB2SoBySo/FT8B2IDRDAHA/AHpQfjUFBQ0AdhAyK+8AfjAwYQ0BAGkAcGBhAGyNAQ\n8AYkAAYCB+MGJgfjBngDBVgcBpAQEPwDZgwDBhAHggZIAwYYAwUOBpBQUFBcAwNYXAMjtQMC9wbI\n3AboB6HcAwUYBpAGCAaQBhgGkBADBghQUAMGKAMDWAZCAwW7AwNQAwJoBpgDBXAGAnwG11ADB0AD\nJiADBbgGoPwHBQZJB+LgBwUcBwUDBhQAADRISDQDY49wSEhwQHhIA4OpAAB8A8R6eEggECADwtEA\nPANDTwNjYHAGWShQAwKHOBA4A8LZA0IIeAaZOEREKChsADBAIBA4BqkoA4KfA0KIVFQDIvg4QANi\nFwAGaQNjr3gHIwZYEAAGEEAwCDBABgkHoTAIBlEIFANIAlAgBiAAfAdhAwJ3B0IGfwMDjgPmiAcB\nA8SRHAYnBihQAwK9BwFgEAODTQPjNXgDAmgHHwcfBx8HHwcfBx8HHwcfBx8HHwcfBx8HHwcfBx8H\nHwcfBx8HHwcfBx8HHwcfBx8HHwcfBx8HHwcfBx8HHwcfBx8HHwcfBx8HHwcfBx8HHwcfBwM=`;\n\n", "\nimport { ColecoVision } from \"../machine/coleco\";\nimport { Platform, BaseZ80MachinePlatform, getToolForFilename_z80 } from \"../common/baseplatform\";\nimport { PLATFORMS } from \"../common/emu\";\nimport { BaseMAMEZ80Platform } from \"../common/mameplatform\";\n\nexport var ColecoVision_PRESETS = [\n  { id: 'text.c', name: 'Text Mode' },\n  { id: 'hello.c', name: 'Scrolling Text' },\n  { id: 'text32.c', name: '32-Column Color Text' },\n  { id: 'stars.c', name: 'Scrolling Starfield' },\n  { id: 'cursorsmooth.c', name: 'Moving Cursor' },\n  { id: 'simplemusic.c', name: 'Simple Music' },\n  { id: 'musicplayer.c', name: 'Multivoice Music' },\n  { id: 'mode2bitmap.c', name: 'Mode 2 Bitmap' },\n  { id: 'mode2compressed.c', name: 'Mode 2 Bitmap (LZG)' },\n  { id: 'lines.c', name: 'Mode 2 Lines' },\n  { id: 'multicolor.c', name: 'Multicolor Mode' },\n  { id: 'siegegame.c', name: 'Siege Game' },\n  { id: 'shoot.c', name: 'Solarian Game' },\n  { id: 'climber.c', name: 'Climber Game' },\n];\n\nclass ColecoVisionPlatform extends BaseZ80MachinePlatform<ColecoVision> implements Platform {\n\n  newMachine()          { return new ColecoVision(); }\n  getPresets()          { return ColecoVision_PRESETS; }\n  getDefaultExtension() { return \".c\"; };\n  readAddress(a)        { return this.machine.read(a); }\n  readVRAMAddress(a)    { return this.machine.readVRAMAddress(a); }\n  // TODO loadBIOS(bios)\t{ this.machine.loadBIOS(a); }\n  getMemoryMap = function() { return { main:[\n      {name:'BIOS',start:0x0,size:0x2000,type:'rom'},\n      {name:'Cartridge Header',start:0x8000,size:0x100,type:'rom'},\n  ] } };\n  showHelp() {\n    return \"https://8bitworkshop.com/docs/platforms/coleco/\";\n  }\n}\n\n/// MAME support\n\nclass ColecoVisionMAMEPlatform extends BaseMAMEZ80Platform implements Platform {\n\n  start() {\n    this.startModule(this.mainElement, {\n      jsfile: 'mame8bitws.js',\n      cfgfile: 'coleco.cfg',\n      biosfile: 'coleco/313 10031-4005 73108a.u2',\n      driver: 'coleco',\n      width: 280 * 2,\n      height: 216 * 2,\n      romfn: '/emulator/cart.rom',\n      romsize: 0x8000,\n      preInit: function(_self) {\n      },\n    });\n  }\n\n  loadROM(title, data) {\n    this.loadROMFile(data);\n    this.loadRegion(\":coleco_cart:rom\", data);\n  }\n\n  getPresets() { return ColecoVision_PRESETS; }\n\n  getToolForFilename = getToolForFilename_z80;\n  getDefaultExtension() { return \".c\"; };\n}\n\n\n///\n\nPLATFORMS['coleco.mame'] = ColecoVisionMAMEPlatform;\nPLATFORMS['coleco'] = ColecoVisionPlatform;\n"],
  "mappings": "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",
  "names": ["COLECOVISION_KEYCODE_MAP", "makeKeycodeMap", "Keys", "ColecoVision", "BaseZ80VDPBasedMachine", "newAddressDecoder", "a", "v", "SN76489_Audio", "MasterAudio", "lzgmini", "stringToByteArray", "COLECO_BIOS_LZG", "addr", "val", "state", "ColecoVision_PRESETS", "ColecoVisionPlatform", "BaseZ80MachinePlatform", "ColecoVision", "a", "ColecoVisionMAMEPlatform", "BaseMAMEZ80Platform", "getToolForFilename_z80", "_self", "title", "data", "PLATFORMS"]
}
